// config/verifier_bots.php
<?php
return [
    'bots' => [
        'cliiip_caption' => [
            'token' => 'TOKEN_BOT_VERIFIER_1',
            'username' => 'VerifierBot1',
            'channels' => ['cliiip_caption', 'LOVEMOVE11']
        ],
        'backup' => [
            'token' => 'TOKEN_BOT_VERIFIER_2', 
            'username' => 'VerifierBot2',
            'channels' => ['cliiip_caption', 'LOVEMOVE11']
        ]
    ]
];
?>// ادمین می‌تواند کانال جدید اضافه کند
elseif ($text == "📢 افزودن کانال جدید") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📢 افزودن کانال جدید\n\nلطفاً اطلاعات را به فرمت زیر ارسال کنید:\n\nکانال|توکن ربات واسط\n\n📝 مثال:\nmy_channel|123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'add_new_channel' WHERE `id` = '{$from_id}' LIMIT 1");
}// ادمین می‌تواند کانال حذف کند
elseif ($text == "🗑 حذف کانال") {
    $channels = mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` WHERE `is_active` = 1"
    );
    
    if (mysqli_num_rows($channels) > 0) {
        $keyboard = ['inline_keyboard' => []];
        
        while ($channel = mysqli_fetch_assoc($channels)) {
            $keyboard['inline_keyboard'][] = [
                [
                    'text' => "❌ حذف @{$channel['channel_username']}",
                    'callback_data' => "delete_channel_{$channel['id']}"
                ]
            ];
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "🗑 حذف کانال از لیست جوین اجباری\n\nلطفاً کانال مورد نظر را انتخاب کنید:",
            'reply_to_message_id' => $message_id,
            'reply_markup' => json_encode($keyboard)
        ]);
    }
}

// پردازش حذف کانال
elseif (strpos($data, "delete_channel_") === 0) {
    $channel_id = str_replace("delete_channel_", "", $data);
    
    mysqli_query($MySQLi,
        "UPDATE `channel_verification` SET `is_active` = 0 WHERE `id` = '{$channel_id}'"
    );
    
    WSBot('editmessagetext', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'text' => "✅ کانال با موفقیت حذف شد!",
        'reply_markup' => json_encode(['inline_keyboard' => []])
    ]);
}// ادمین می‌تواند کانال‌ها را فعال/غیرفعال کند
elseif ($text == "⚙️ فعال/غیرفعال کردن") {
    $channels = mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` ORDER BY `is_active` DESC"
    );
    
    $keyboard = ['inline_keyboard' => []];
    
    while ($channel = mysqli_fetch_assoc($channels)) {
        $status = $channel['is_active'] ? "✅ فعال" : "❌ غیرفعال";
        $action = $channel['is_active'] ? "غیرفعال" : "فعال";
        
        $keyboard['inline_keyboard'][] = [
            [
                'text' => "{$action} @{$channel['channel_username']} ({$status})",
                'callback_data' => "toggle_channel_{$channel['id']}"
            ]
        ];
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⚙️ مدیریت وضعیت کانال‌ها\n\nکانال‌های جوین اجباری:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => json_encode($keyboard)
    ]);
}// ادمین می‌تواند لیست کامل کانال‌ها را ببیند
elseif ($text == "📋 لیست کانال‌ها") {
    $channels = mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` ORDER BY `is_active` DESC, `created_at` DESC"
    );
    
    $message = "📋 لیست کانال‌های جوین اجباری:\n\n";
    
    while ($channel = mysqli_fetch_assoc($channels)) {
        $status = $channel['is_active'] ? "✅ فعال" : "❌ غیرفعال";
        $message .= "{$status} @{$channel['channel_username']}\n";
        $message .= "   📅 اضافه شده در: {$channel['created_at']}\n";
        $message .= "   ➖➖➖➖➖➖➖\n";
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $message,
        'reply_to_message_id' => $message_id
    ]);
}// ادمین می‌تواند وضعیت عضویت کاربران را تست کند
elseif ($text == "🔄 تست بررسی عضویت") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔄 تست بررسی عضویت\n\nلطفاً آیدی کاربر را برای تست ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'test_membership' WHERE `id` = '{$from_id}' LIMIT 1");
}$channel_management = json_encode(['keyboard' => [
    [['text' => "📢 افزودن کانال جدید"], ['text' => "🗑 حذف کانال"]],
    [['text' => "📋 لیست کانال‌ها"], ['text' => "🔧 تنظیمات ربات واسط"]],
    [['text' => "🔄 تست بررسی عضویت"], ['text' => "⚙️ فعال/غیرفعال کردن"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// در منوی اصلی ادمین اضافه شده:
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🖼 مدیریت کاور ویدیوها"], ['text' => "📝 مدیریت متون ربات"]],
        [['text' => "📢 مدیریت جوین اجباری"], ['text' => "🛠 مدیریت فایل‌ها"]], // ← اینجا
        // ... بقیه منو
    ]]);
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `backup_settings`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `backup_settings` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `backup_channel` varchar(100) DEFAULT NULL,
        `backup_bot_token` varchar(100) DEFAULT NULL,
        `is_enabled` tinyint(1) DEFAULT 0,
        `backup_file_data` tinyint(1) DEFAULT 1,
        `backup_metadata` tinyint(1) DEFAULT 1,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        `updated_at` timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    )");
    
    // ایجاد جدول برای ذخیره اطلاعات پشتیبان‌گیری شده
    mysqli_query($MySQLi, "CREATE TABLE `backup_logs` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `file_code` varchar(50) NOT NULL,
        `file_type` varchar(20) NOT NULL,
        `backup_message_id` bigint(20) NOT NULL,
        `backup_channel` varchar(100) NOT NULL,
        `backup_date` timestamp DEFAULT CURRENT_TIMESTAMP,
        `file_size` bigint(20) DEFAULT 0,
        `user_id` bigint(20) NOT NULL
    )");
}// اضافه کردن به بخش توابع
function getBackupSettings() {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `backup_settings` ORDER BY `id` DESC LIMIT 1"
    ));
    
    if (!$result) {
        // ایجاد تنظیمات پیش‌فرض
        mysqli_query($MySQLi,
            "INSERT INTO `backup_settings` (`is_enabled`) VALUES (0)"
        );
        $result = ['is_enabled' => 0];
    }
    
    return $result;
}

function updateBackupSettings($channel, $bot_token, $is_enabled, $backup_file_data = 1, $backup_metadata = 1) {
    global $MySQLi;
    
    $channel = mysqli_real_escape_string($MySQLi, $channel);
    $bot_token = mysqli_real_escape_string($MySQLi, $bot_token);
    
    return mysqli_query($MySQLi,
        "UPDATE `backup_settings` 
         SET `backup_channel` = '{$channel}', 
             `backup_bot_token` = '{$bot_token}',
             `is_enabled` = '{$is_enabled}',
             `backup_file_data` = '{$backup_file_data}',
             `backup_metadata` = '{$backup_metadata}',
             `updated_at` = CURRENT_TIMESTAMP"
    );
}

function sendToBackupChannel($file_type, $file_id, $caption, $file_code, $file_size, $user_id) {
    $settings = getBackupSettings();
    
    if (!$settings['is_enabled'] || !$settings['backup_channel'] || !$settings['backup_bot_token']) {
        return false;
    }
    
    $backup_caption = "💾 پشتیبان فایل\n\n";
    $backup_caption .= "🔑 کد فایل: `{$file_code}`\n";
    $backup_caption .= "📁 نوع: " . doc($file_type) . "\n";
    $backup_caption .= "💾 حجم: " . convert($file_size) . "\n";
    $backup_caption .= "👤 آپلودکننده: {$user_id}\n";
    $backup_caption .= "📅 تاریخ: " . date('Y-m-d H:i:s') . "\n\n";
    $backup_caption .= "📝 توضیحات:\n{$caption}\n\n";
    $backup_caption .= "#بکاپ #{$file_type} #{$file_code}";
    
    try {
        $method = 'send' . $file_type;
        $result = backupBotApi($method, [
            'chat_id' => $settings['backup_channel'],
            $file_type => $file_id,
            'caption' => $backup_caption,
            'parse_mode' => 'HTML'
        ], $settings['backup_bot_token']);
        
        if ($result && $result->ok) {
            // ذخیره اطلاعات پشتیبان
            logBackup($file_code, $file_type, $result->result->message_id, $settings['backup_channel'], $file_size, $user_id);
            return $result->result->message_id;
        }
    } catch (Exception $e) {
        error_log("Backup failed: " . $e->getMessage());
    }
    
    return false;
}

function backupBotApi($method, $datas = [], $bot_token) {
    $url = 'https://api.telegram.org/bot'.$bot_token.'/'.$method;
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POSTFIELDS => $datas,
        CURLOPT_CUSTOMREQUEST => 'POST',
        CURLOPT_TIMEOUT => 30
    ]);
    $response = json_decode(curl_exec($ch));
    curl_close($ch);
    return $response;
}

function logBackup($file_code, $file_type, $message_id, $channel, $file_size, $user_id) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "INSERT INTO `backup_logs` 
         (`file_code`, `file_type`, `backup_message_id`, `backup_channel`, `file_size`, `user_id`)
         VALUES ('{$file_code}', '{$file_type}', '{$message_id}', '{$channel}', '{$file_size}', '{$user_id}')"
    );
}

function getBackupStats() {
    global $MySQLi;
    
    $stats = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT COUNT(*) as total_files, 
                SUM(file_size) as total_size,
                COUNT(DISTINCT file_type) as file_types
         FROM `backup_logs`"
    ));
    
    return $stats ?: ['total_files' => 0, 'total_size' => 0, 'file_types' => 0];
}// منوی مدیریت پشتیبان‌گیری
$backup_management = json_encode(['keyboard' => [
    [['text' => "⚙️ تنظیمات پشتیبان‌گیری"], ['text' => "📊 آمار پشتیبان"]],
    [['text' => "🔧 تست پشتیبان‌گیری"], ['text' => "🔄 پشتیبان‌گیری دستی"]],
    [['text' => "📤 بازیابی از پشتیبان"], ['text' => "🗑 مدیریت لاگ‌ها"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به منوی ادمین
elseif ($text == "💾 مدیریت پشتیبان‌گیری") {
    $settings = getBackupSettings();
    $stats = getBackupStats();
    
    $status_text = $settings['is_enabled'] ? "✅ فعال" : "❌ غیرفعال";
    $channel_text = $settings['backup_channel'] ? "@" . $settings['backup_channel'] : "تنظیم نشده";
    
    $message = "💾 سیستم پشتیبان‌گیری خودکار\n\n";
    $message .= "🔧 وضعیت: {$status_text}\n";
    $message .= "📢 کانال پشتیبان: {$channel_text}\n\n";
    $message .= "📊 آمار پشتیبان:\n";
    $message .= "📁 تعداد فایل‌ها: " . number_format($stats['total_files']) . "\n";
    $message .= "💾 حجم کل: " . convert($stats['total_size']) . "\n";
    $message .= "🎬 انواع فایل: {$stats['file_types']}\n\n";
    $message .= "از منوی زیر برای مدیریت استفاده کنید:";
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $message,
        'reply_to_message_id' => $message_id,
        'reply_markup' => $backup_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'backup_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

// تنظیمات پشتیبان‌گیری
elseif ($text == "⚙️ تنظیمات پشتیبان‌گیری") {
    $settings = getBackupSettings();
    
    $keyboard = json_encode(['inline_keyboard' => [
        [
            ['text' => ($settings['is_enabled'] ? "❌ غیرفعال کردن" : "✅ فعال کردن"), 
             'callback_data' => "toggle_backup"]
        ],
        [
            ['text' => "📢 تنظیم کانال پشتیبان", 
             'callback_data' => "set_backup_channel"]
        ],
        [
            ['text' => "🤖 تنظیم توکن ربات پشتیبان", 
             'callback_data' => "set_backup_token"]
        ],
        [
            ['text' => "⚡ تنظیمات پیشرفته", 
             'callback_data' => "advanced_backup_settings"]
        ]
    ]]);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⚙️ تنظیمات پشتیبان‌گیری\n\nلطفاً گزینه مورد نظر را انتخاب کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $keyboard
    ]);
}// بهبود تابع handleFileUpload برای افزودن پشتیبان‌گیری خودکار
function handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id) {
    global $MySQLi, $usernamebot;
    
    // بررسی تکراری نبودن فایل
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    if(!$file) {
        // ... کدهای موجود آپلود
        
        $code = RandomString();
        // ... پردازش آپلود اصلی
        
        // 🔄 پشتیبان‌گیری خودکار پس از آپلود موفق
        $backup_result = sendToBackupChannel($file_type, $file_id, $caption, $code, $file_size, $from_id);
        
        if ($backup_result) {
            // لاگ موفقیت پشتیبان‌گیری
            error_log("Backup successful for file: {$code}");
        }
        
        return $code;
    }
    // ... بقیه کد
}// بازیابی فایل‌ها از کانال پشتیبان
elseif ($text == "📤 بازیابی از پشتیبان") {
    $settings = getBackupSettings();
    
    if (!$settings['is_enabled']) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ پشتیبان‌گیری غیرفعال است! ابتدا سیستم را فعال کنید.",
            'reply_to_message_id' => $message_id
        ]);
        return;
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📤 بازیابی از پشتیبان\n\nاین عملیات فایل‌های پشتیبان‌گیری شده را به ربات منتقل می‌کند.\n\n⚠️ توجه: این عملیات ممکن است زمان‌بر باشد.\n\nآیا ادامه می‌دهید؟",
        'reply_to_message_id' => $message_id,
        'reply_markup' => json_encode(['inline_keyboard' => [
            [['text' => "✅ بله، شروع کن", 'callback_data' => "restore_backup_confirm"]],
            [['text' => "❌ خیر، لغو کن", 'callback_data' => "restore_backup_cancel"]]
        ]])
    ]);
}

// بازیابی خودکار از پشتیبان
function restoreFromBackup($limit = 10) {
    global $MySQLi;
    
    $settings = getBackupSettings();
    $restored_count = 0;
    
    // دریافت فایل‌های پشتیبان‌گیری شده که هنوز بازیابی نشده‌اند
    $backup_files = mysqli_query($MySQLi,
        "SELECT bl.*, bl.backup_message_id as message_id
         FROM `backup_logs` bl
         LEFT JOIN `dbfile` d ON bl.file_code = d.code
         WHERE d.code IS NULL
         ORDER BY bl.backup_date ASC
         LIMIT {$limit}"
    );
    
    while ($backup_file = mysqli_fetch_assoc($backup_files)) {
        try {
            // دریافت اطلاعات فایل از کانال پشتیبان
            $file_info = backupBotApi('getChatMessage', [
                'chat_id' => $backup_file['backup_channel'],
                'message_id' => $backup_file['backup_message_id']
            ], $settings['backup_bot_token']);
            
            if ($file_info && $file_info->ok) {
                $message = $file_info->result;
                
                // استخراج file_id بر اساس نوع فایل
                $file_id = null;
                $file_type = $backup_file['file_type'];
                
                if (isset($message->video)) {
                    $file_id = $message->video->file_id;
                } elseif (isset($message->document)) {
                    $file_id = $message->document->file_id;
                } elseif (isset($message->photo)) {
                    $photo = $message->photo;
                    $file_id = $photo[count($photo)-1]->file_id;
                } elseif (isset($message->audio)) {
                    $file_id = $message->audio->file_id;
                } elseif (isset($message->voice)) {
                    $file_id = $message->voice->file_id;
                } elseif (isset($message->sticker)) {
                    $file_id = $message->sticker->file_id;
                }
                
                if ($file_id) {
                    // بازیابی فایل به ربات اصلی
                    $restore_result = restoreFileToBot(
                        $file_type, 
                        $file_id, 
                        $backup_file['file_code'],
                        $backup_file['user_id'],
                        $message->caption
                    );
                    
                    if ($restore_result) {
                        $restored_count++;
                    }
                }
            }
        } catch (Exception $e) {
            error_log("Restore failed for {$backup_file['file_code']}: " . $e->getMessage());
        }
    }
    
    return $restored_count;
}// پشتیبان‌گیری دستی برای فایل‌های قدیمی
elseif ($text == "🔄 پشتیبان‌گیری دستی") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔄 پشتیبان‌گیری دستی\n\nاین عملیات فایل‌های موجود در ربات را به کانال پشتیبان منتقل می‌کند.\n\nلطفاً تعداد فایل‌ها را مشخص کنید (پیش‌فرض: 10):",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'manual_backup_count' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'manual_backup_count') {
    $limit = is_numeric($text) ? intval($text) : 10;
    $limit = min($limit, 50); // حداکثر 50 فایل
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⏳ شروع پشتیبان‌گیری برای {$limit} فایل...",
        'reply_to_message_id' => $message_id
    ]);
    
    $backup_count = manualBackup($limit, $from_id);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ پشتیبان‌گیری دستی تکمیل شد!\n\n📊 تعداد فایل‌های پشتیبان‌گیری شده: {$backup_count}",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $backup_management
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'backup_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

function manualBackup($limit, $user_id) {
    global $MySQLi;
    
    $files = mysqli_query($MySQLi,
        "SELECT d.*, fm.caption 
         FROM `dbfile` d
         LEFT JOIN `file_metadata` fm ON d.code = fm.file_code
         LEFT JOIN `backup_logs` bl ON d.code = bl.file_code
         WHERE bl.file_code IS NULL
         ORDER BY d.date DESC
         LIMIT {$limit}"
    );
    
    $backup_count = 0;
    
    while ($file = mysqli_fetch_assoc($files)) {
        $backup_result = sendToBackupChannel(
            $file['file'], 
            $file['file_id'], 
            $file['caption'] ?: 'بدون توضیح',
            $file['code'],
            $file['file_size'],
            $user_id
        );
        
        if ($backup_result) {
            $backup_count++;
        }
        
        // تاخیر برای جلوگیری از محدودیت تلگرام
        sleep(1);
    }
    
    return $backup_count;
}// مشاهده و مدیریت لاگ‌های پشتیبان‌گیری
elseif ($text == "🗑 مدیریت لاگ‌ها") {
    $stats = getBackupStats();
    $recent_backups = mysqli_query($MySQLi,
        "SELECT * FROM `backup_logs` ORDER BY `backup_date` DESC LIMIT 5"
    );
    
    $message = "🗑 مدیریت لاگ‌های پشتیبان‌گیری\n\n";
    $message .= "📊 آمار کلی:\n";
    $message .= "• کل فایل‌ها: {$stats['total_files']}\n";
    $message .= "• حجم کل: " . convert($stats['total_size']) . "\n\n";
    $message .= "📋 آخرین پشتیبان‌گیری‌ها:\n";
    
    while ($log = mysqli_fetch_assoc($recent_backups)) {
        $message .= "• {$log['file_type']} - {$log['file_code']} - " . date('Y-m-d H:i', strtotime($log['backup_date'])) . "\n";
    }
    
    $keyboard = json_encode(['inline_keyboard' => [
        [['text' => "🧹 پاک کردن لاگ‌های قدیمی", 'callback_data' => "cleanup_old_logs"]],
        [['text' => "📤 Export لاگ‌ها", 'callback_data' => "export_backup_logs"]],
        [['text' => "🔍 مشاهده لاگ کامل", 'callback_data' => "view_full_logs"]]
    ]]);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $message,
        'reply_to_message_id' => $message_id,
        'reply_markup' => $keyboard
    ]);
}// اضافه کردن مدیریت پشتیبان‌گیری به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🖼 مدیریت کاور ویدیوها"], ['text' => "📝 مدیریت متون ربات"]],
        [['text' => "📢 مدیریت جوین اجباری"], ['text' => "💾 مدیریت پشتیبان‌گیری"]], // ← جدید
        [['text' => "🛠 مدیریت فایل‌ها"], ['text' => "🔥 پرطرفدارترین‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "🗂 کد پیگیری فایل"], ['text' => "👤 مدیریت"]]
        ], 'resize_keyboard' => true
    ]);
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `link_mapping`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `link_mapping` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `old_bot_username` varchar(100) NOT NULL,
        `new_bot_username` varchar(100) NOT NULL,
        `old_file_code` varchar(50) NOT NULL,
        `new_file_code` varchar(50) NOT NULL,
        `mapped_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        `hits` int(11) DEFAULT 0,
        UNIQUE KEY `unique_mapping` (`old_bot_username`, `old_file_code`)
    )");
    
    // ایجاد جدول برای مدیریت ربات‌ها
    mysqli_query($MySQLi, "CREATE TABLE `bot_migrations` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `old_bot_username` varchar(100) NOT NULL,
        `new_bot_username` varchar(100) NOT NULL,
        `migration_date` timestamp DEFAULT CURRENT_TIMESTAMP,
        `files_migrated` int(11) DEFAULT 0,
        `is_active` tinyint(1) DEFAULT 1
    )");
}// توابع مدیریت انتقال لینک
function createLinkMapping($old_bot, $new_bot, $old_code, $new_code) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "INSERT INTO `link_mapping` 
        (`old_bot_username`, `new_bot_username`, `old_file_code`, `new_file_code`) 
        VALUES ('{$old_bot}', '{$new_bot}', '{$old_code}', '{$new_code}')
        ON DUPLICATE KEY UPDATE 
        `new_bot_username` = '{$new_bot}',
        `new_file_code` = '{$new_code}',
        `hits` = `hits` + 1"
    );
}

function getMappedLink($old_bot, $old_code) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `link_mapping` 
         WHERE `old_bot_username` = '{$old_bot}' AND `old_file_code` = '{$old_code}'"
    ));
    
    return $result ?: null;
}

function logLinkHit($mapping_id) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "UPDATE `link_mapping` SET `hits` = `hits` + 1 WHERE `id` = '{$mapping_id}'"
    );
}// بهبود بخش /start برای پشتیبانی از لینک‌های قدیمی
elseif(strpos($text, "/start _") !== false) {
    $requested_code = str_replace("/start _", "", $text);
    
    // اول بررسی کن که فایل در ربات جدید وجود دارد
    $dataFile = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `code` = '{$requested_code}' LIMIT 1"));
    
    if ($dataFile) {
        // فایل در ربات جدید وجود دارد - پردازش عادی
        // ... کدهای موجود
    } else {
        // فایل در ربات جدید نیست - شاید لینک قدیمی است
        $mapped_link = handleLegacyLink($requested_code, $from_id, $chat_id, $message_id);
        
        if (!$mapped_link) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ فایل مورد نظر یافت نشد.\n\n⚠️ اگر این لینک از ربات قدیمی است، لطفاً از مدیر درخواست کنید فایل را منتقل کند.",
                'reply_to_message_id' => $message_id
            ]);
        }
    }
}

// تابع پردازش لینک‌های قدیمی
function handleLegacyLink($requested_code, $user_id, $chat_id, $message_id) {
    global $MySQLi, $usernamebot;
    
    // بررسی آیا این لینک قدیمی map شده است
    $mapping = getMappedLink('old_bot_username', $requested_code); // باید old_bot_username رو از جایی بگیریم
    
    if ($mapping) {
        // لینک map شده - کاربر رو به فایل جدید redirect کن
        logLinkHit($mapping['id']);
        
        $new_file_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT * FROM `dbfile` WHERE `code` = '{$mapping['new_file_code']}'"
        ));
        
        if ($new_file_data) {
            // ارسال فایل جدید
            $dl = number_format($new_file_data['dl']);
            $method = $new_file_data['file'];
            $cap = file_get_contents("files/{$new_file_data['file_id']}");
            
            $redirect_message = "🔁 این لینک از ربات قدیمی به ربات جدید منتقل شده است.\n\n";
            $redirect_message .= "✅ فایل با موفقیت پیدا شد و در زیر آماده دانلود است:";
            
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => $redirect_message,
                'reply_to_message_id' => $message_id
            ]);
            
            WSBot('send'.$new_file_data['file'], [
                'chat_id' => $chat_id,
                "$method" => $new_file_data['file_id'],
                'caption' => $cap . PHP_EOL . "📥 تعداد دانلود ها : <code>{$dl}</code>\n🔄 منتقل شده از ربات قدیمی\n🤖 @$usernamebot",
                'reply_to_message_id' => $message_id,
                'parse_mode' => "html",
                'reply_markup' => $menu
            ]);
            
            return true;
        }
    }
    
    return false;
}// اضافه کردن به منوی پشتیبان‌گیری
$link_migration_menu = json_encode(['keyboard' => [
    [['text' => "🔄 انتقال لینک‌های قدیمی"], ['text' => "📊 آمار لینک‌های منتقل شده"]],
    [['text' => "🔗 تست لینک قدیمی"], ['text' => "🗑 پاکسازی لینک‌های قدیمی"]],
    [['text' => "🌐 تنظیم دامنه ربات قدیمی"], ['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// انتقال لینک‌های قدیمی
elseif ($text == "🔄 انتقال لینک‌های قدیمی") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔄 انتقال لینک‌های قدیمی\n\nلطفاً اطلاعات ربات قدیمی را وارد کنید:\n\nیوزرنیم ربات قدیمی|پیشوند لینک‌ها\n\n📝 مثال:\nolduploaderbot|_",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'migrate_links_info' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'migrate_links_info') {
    $parts = explode('|', $text);
    if (count($parts) == 2) {
        $old_bot = trim($parts[0]);
        $prefix = trim($parts[1]);
        
        // ذخیره اطلاعات برای مرحله بعد
        $MySQLi->query("UPDATE `user` SET `step` = 'migrate_links_process', `code` = '{$old_bot}', `upload` = '0' WHERE `id` = '{$from_id}' LIMIT 1");
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ اطلاعات ربات قدیمی ذخیره شد!\n\n🤖 ربات قدیمی: @{$old_bot}\n🔗 پیشوند: {$prefix}\n\nآیا می‌خواهید انتقال را شروع کنیم؟",
            'reply_to_message_id' => $message_id,
            'reply_markup' => json_encode(['keyboard' => [
                [['text' => "✅ بله، شروع کن"], ['text' => "❌ لغو"]]
            ], 'resize_keyboard' => true])
        ]);
    }
}

elseif ($user['step'] == 'migrate_links_process' && $text == "✅ بله، شروع کن") {
    $old_bot = $user['code'];
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⏳ شروع انتقال لینک‌های قدیمی...\n\nاین عملیات ممکن است چند دقیقه طول بکشد.",
        'reply_to_message_id' => $message_id
    ]);
    
    $migration_result = migrateAllLinks($old_bot, $usernamebot, $from_id);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ انتقال لینک‌ها تکمیل شد!\n\n📊 نتایج:\n• لینک‌های منتقل شده: {$migration_result['migrated']}\n• خطاها: {$migration_result['errors']}\n• کل فایل‌ها: {$migration_result['total']}",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $link_migration_menu
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'backup_management', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}

// تابع انتقال همه لینک‌ها
function migrateAllLinks($old_bot, $new_bot, $user_id) {
    global $MySQLi;
    
    // گرفتن همه فایل‌های ربات جدید
    $files = mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `user_id` = '{$user_id}'");
    
    $results = ['migrated' => 0, 'errors' => 0, 'total' => 0];
    $results['total'] = mysqli_num_rows($files);
    
    while ($file = mysqli_fetch_assoc($files)) {
        // فرض می‌کنیم کد فایل در ربات قدیمی و جدید یکسان است
        // (اگر در پشتیبان‌گیری کدها حفظ شده باشند)
        $mapping_created = createLinkMapping($old_bot, $new_bot, $file['code'], $file['code']);
        
        if ($mapping_created) {
            $results['migrated']++;
        } else {
            $results['errors']++;
        }
    }
    
    // ثبت اطلاعات مهاجرت
    mysqli_query($MySQLi,
        "INSERT INTO `bot_migrations` 
         (`old_bot_username`, `new_bot_username`, `files_migrated`) 
         VALUES ('{$old_bot}', '{$new_bot}', '{$results['migrated']}')"
    );
    
    return $results;
}// تابع تشخیص خودکار لینک‌های قدیمی
function detectLegacyBot($file_code) {
    // لیست ربات‌های قدیمی که ممکن است لینک از آنها آمده باشد
    $legacy_bots = ['olduploaderbot', 'previousbot', 'uploader_v1', 'uploader_v2'];
    
    foreach ($legacy_bots as $bot) {
        $mapping = getMappedLink($bot, $file_code);
        if ($mapping) {
            return $mapping;
        }
    }
    
    return null;
}

// بهبود بخش اصلی start
elseif(strpos($text, "/start _") !== false) {
    $requested_code = str_replace("/start _", "", $text);
    $dataFile = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `code` = '{$requested_code}' LIMIT 1"));
    
    if ($dataFile) {
        // فایل در ربات جدید وجود دارد - پردازش عادی
        // ... کدهای موجود
    } else {
        // بررسی هوشمند لینک‌های قدیمی
        $legacy_mapping = detectLegacyBot($requested_code);
        
        if ($legacy_mapping) {
            // لینک قدیمی تشخیص داده شد - redirect به فایل جدید
            handleLegacyRedirect($legacy_mapping, $from_id, $chat_id, $message_id);
        } else {
            // فایل پیدا نشد - پیشنهاد جستجو یا انتقال
            offerFileRecovery($requested_code, $chat_id, $message_id);
        }
    }
}// پیشنهاد بازیابی فایل‌های گم شده
function offerFileRecovery($file_code, $chat_id, $message_id) {
    global $usernamebot;
    
    $keyboard = json_encode(['inline_keyboard' => [
        [
            ['text' => "🔍 جستجو در پشتیبان‌ها", 'callback_data' => "search_backup_{$file_code}"],
            ['text' => "📨 درخواست از مدیر", 'callback_data' => "request_admin_{$file_code}"]
        ]
    ]]);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔍 فایل مورد نظر یافت نشد!\n\nکد فایل: `{$file_code}`\n\n💡 راه‌حل‌های ممکن:\n• فایل ممکن است در پشتیبان‌ها موجود باشد\n• می‌توانید از مدیر درخواست بازیابی کنید\n• ممکن است لینک اشتباه باشد",
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'Markdown',
        'reply_markup' => $keyboard
    ]);
}

// پردازش درخواست بازیابی
elseif (strpos($data, "search_backup_") === 0) {
    $file_code = str_replace("search_backup_", "", $data);
    
    // جستجو در پشتیبان‌ها
    $backup_result = searchInBackup($file_code, $fromid);
    
    if ($backup_result) {
        WSBot('editmessagetext', [
            'chat_id' => $chatid,
            'message_id' => $messageid,
            'text' => "✅ فایل در پشتیبان یافت شد!\n\nدر حال بازیابی...",
            'reply_markup' => json_encode(['inline_keyboard' => []])
        ]);
        
        // بازیابی فایل از پشتیبان
        recoverFromBackup($file_code, $chatid, $fromid);
    } else {
        WSBot('editmessagetext', [
            'chat_id' => $chatid,
            'message_id' => $messageid,
            'text' => "❌ فایل در پشتیبان‌ها یافت نشد.\n\nلطفاً از مدیر درخواست کنید.",
            'reply_markup' => json_encode(['inline_keyboard' => [
                [['text' => "📨 درخواست از مدیر", 'callback_data' => "request_admin_{$file_code}"]]
            ]])
        ]);
    }
}// بهبود منوی پشتیبان‌گیری
$backup_management = json_encode(['keyboard' => [
    [['text' => "⚙️ تنظیمات پشتیبان‌گیری"], ['text' => "📊 آمار پشتیبان"]],
    [['text' => "🔧 تست پشتیبان‌گیری"], ['text' => "🔄 پشتیبان‌گیری دستی"]],
    [['text' => "📤 بازیابی از پشتیبان"], ['text' => "🔗 مدیریت لینک‌های قدیمی"]], // ← جدید
    [['text' => "🗑 مدیریت لاگ‌ها"], ['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);

// دستور مدیریت لینک‌های قدیمی
elseif ($text == "🔗 مدیریت لینک‌های قدیمی") {
    $migration_stats = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT COUNT(*) as total_links, SUM(hits) as total_hits 
         FROM `link_mapping`"
    ));
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔗 مدیریت لینک‌های قدیمی\n\n📊 آمار انتقال:\n• لینک‌های منتقل شده: {$migration_stats['total_links']}\n• بازدید لینک‌های قدیمی: {$migration_stats['total_hits']}\n\nبا این سیستم لینک‌های ربات قدیمی در ربات جدید کار می‌کنند!",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $link_migration_menu
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'link_migration' WHERE `id` = '{$from_id}' LIMIT 1");
}// ------------------ { Your Config } ------------------ //
$Config = [
    'api_token' => getenv('BOT_TOKEN'), // توکن از محیطی ایمن خوانده می‌شود
    'admin' => [140313934], // فقط ادمین اصلی باقی می‌ماند
    'channel' => "cliiip_caption"
];

// خواندن توکن از فایل محیطی
if (!getenv('BOT_TOKEN')) {
    if (file_exists('.env')) {
        $env = parse_ini_file('.env');
        if (isset($env['BOT_TOKEN'])) {
            $Config['api_token'] = $env['BOT_TOKEN'];
        }
    }
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `admin_users`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `admin_users` (
        `id` bigint(20) NOT NULL PRIMARY KEY,
        `username` varchar(100) DEFAULT NULL,
        `added_by` bigint(20) NOT NULL,
        `added_date` timestamp DEFAULT CURRENT_TIMESTAMP,
        `permissions` varchar(255) DEFAULT 'all'
    )");
    
    // اضافه کردن ادمین اصلی
    mysqli_query($MySQLi, "INSERT IGNORE INTO `admin_users` (`id`, `username`, `added_by`) VALUES 
        ('140313934', 'Developer_001', '140313934')");
}// ------------------ { Admin Management Functions } ------------------ //
function isAdmin($user_id) {
    global $MySQLi;
    $result = mysqli_query($MySQLi, "SELECT * FROM `admin_users` WHERE `id` = '{$user_id}'");
    return mysqli_num_rows($result) > 0;
}

function addAdmin($admin_id, $target_id, $target_username = '') {
    global $MySQLi;
    $target_username = mysqli_real_escape_string($MySQLi, $target_username);
    return mysqli_query($MySQLi, "INSERT INTO `admin_users` (`id`, `username`, `added_by`) 
        VALUES ('{$target_id}', '{$target_username}', '{$admin_id}')");
}

function removeAdmin($admin_id, $target_id) {
    global $MySQLi;
    // جلوگیری از حذف خود ادمین اصلی
    if ($target_id == 140313934) return false;
    return mysqli_query($MySQLi, "DELETE FROM `admin_users` WHERE `id` = '{$target_id}'");
}

function listAdmins() {
    global $MySQLi;
    $result = mysqli_query($MySQLi, "SELECT * FROM `admin_users`");
    $admins = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $admins[] = $row;
    }
    return $admins;
}// تغییر تمام موارد زیر در کد:
if (in_array($from_id, $Config['admin'])) {
// به:
if (isAdmin($from_id)) {// اضافه کردن به بخش پنل ادمین
elseif ($text == "👥 مدیریت ادمین‌ها") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "👥 مدیریت ادمین‌های ربات\n\nاز گزینه‌های زیر استفاده کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $admin_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'admin_management' WHERE `id` = '{$from_id}' LIMIT 1");
}
elseif ($text == "➕ افزودن ادمین") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "👤 برای افزودن ادمین جدید، یکی از روش‌های زیر را انتخاب کنید:\n\n1. آیدی عددی کاربر را ارسال کنید\n2. روی پیام کاربر ریپلای کنید و /addadmin را تایپ کنید",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back_panel
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'add_admin' WHERE `id` = '{$from_id}' LIMIT 1");
}
elseif ($text == "➖ حذف ادمین") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "👤 برای حذف ادمین، آیدی عددی کاربر را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back_panel
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'remove_admin' WHERE `id` = '{$from_id}' LIMIT 1");
}
elseif ($text == "📋 لیست ادمین‌ها") {
    $admins = listAdmins();
    $admin_list = "📋 لیست ادمین‌های ربات:\n\n";
    
    foreach ($admins as $index => $admin) {
        $admin_list .= ($index + 1) . ". آیدی: `" . $admin['id'] . "`\n";
        $admin_list .= "   یوزرنیم: @" . ($admin['username'] ?: 'ندارد') . "\n";
        $admin_list .= "   اضافه شده توسط: " . $admin['added_by'] . "\n";
        $admin_list .= "   تاریخ: " . $admin['added_date'] . "\n➖➖➖➖➖\n";
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $admin_list,
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'Markdown'
    ]);
}

// پردازش افزودن ادمین
elseif ($user['step'] == 'add_admin') {
    if (is_numeric($text)) {
        $target_id = (int)$text;
        if (addAdmin($from_id, $target_id)) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ کاربر با آیدی `{$target_id}` با موفقیت به لیست ادمین‌ها اضافه شد.",
                'reply_to_message_id' => $message_id,
                'parse_mode' => 'Markdown',
                'reply_markup' => $admin_management
            ]);
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ خطا در اضافه کردن کاربر. ممکن است کاربر از قبل ادمین باشد.",
                'reply_to_message_id' => $message_id,
                'reply_markup' => $admin_management
            ]);
        }
        $MySQLi->query("UPDATE `user` SET `step` = 'admin_management' WHERE `id` = '{$from_id}' LIMIT 1");
    }
}

// پردازش حذف ادمین
elseif ($user['step'] == 'remove_admin') {
    if (is_numeric($text)) {
        $target_id = (int)$text;
        if (removeAdmin($from_id, $target_id)) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ کاربر با آیدی `{$target_id}` از لیست ادمین‌ها حذف شد.",
                'reply_to_message_id' => $message_id,
                'parse_mode' => 'Markdown',
                'reply_markup' => $admin_management
            ]);
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ خطا در حذف کاربر. ممکن است کاربر ادمین نباشد یا ادمین اصلی باشد.",
                'reply_to_message_id' => $message_id,
                'reply_markup' => $admin_management
            ]);
        }
        $MySQLi->query("UPDATE `user` SET `step` = 'admin_management' WHERE `id` = '{$from_id}' LIMIT 1");
    }
}

// دستور ریپلای برای افزودن ادمین
elseif (isAdmin($from_id) && strpos($text, '/addadmin') === 0 && isset($message->reply_to_message)) {
    $target_id = $message->reply_to_message->from->id;
    $target_username = $message->reply_to_message->from->username;
    
    if (addAdmin($from_id, $target_id, $target_username)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ کاربر @{$target_username} ({$target_id}) با موفقیت به لیست ادمین‌ها اضافه شد.",
            'reply_to_message_id' => $message_id
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ خطا در اضافه کردن کاربر. ممکن است کاربر از قبل ادمین باشد.",
            'reply_to_message_id' => $message_id
        ]);
    }
}# فایل .env - این فایل را در روت پروژه ایجاد کنید
BOT_TOKEN=1901633415:AAETjVO2kteOJs4vXZpCByJvgrMX3xNZXZ0
DB_HOST=localhost
DB_NAME=amirhrez_boti
DB_USER=amirhrez_boti
DB_PASS=#1~Q]8aBJv(+// خواندن از فایل محیطی برای دیتابیس هم
$db_host = getenv('DB_HOST') ?: 'localhost';
$db_user = getenv('DB_USER') ?: $Database['username'];
$db_pass = getenv('DB_PASS') ?: $Database['password'];
$db_name = getenv('DB_NAME') ?: $Database['dbname'];

$MySQLi = mysqli_connect($db_host, $db_user, $db_pass, $db_name);// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `auto_delete_messages`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `auto_delete_messages` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `chat_id` bigint(20) NOT NULL,
        `message_id` bigint(20) NOT NULL,
        `delete_time` int(11) NOT NULL COMMENT 'زمان حذف به ثانیه',
        `scheduled_time` timestamp DEFAULT CURRENT_TIMESTAMP,
        `status` tinyint(1) DEFAULT 1 COMMENT '1=فعال, 0=حذف شده'
    )");
}// اضافه کردن به بخش توابع
function deleteMessage($chat_id, $message_id) {
    return WSBot('deleteMessage', [
        'chat_id' => $chat_id,
        'message_id' => $message_id
    ]);
}

// تابع حذف خودکار پیام
function scheduleAutoDelete($chat_id, $message_id, $delete_after_seconds = 60) {
    global $MySQLi;
    
    $delete_time = time() + $delete_after_seconds;
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `auto_delete_messages` 
        (`chat_id`, `message_id`, `delete_time`) 
        VALUES ('{$chat_id}', '{$message_id}', '{$delete_time}')"
    );
}// تابعی برای حذف پیام‌های زمان‌گذاری شده
function processAutoDelete() {
    global $MySQLi;
    
    $current_time = time();
    $messages = mysqli_query($MySQLi, 
        "SELECT * FROM `auto_delete_messages` 
         WHERE `delete_time` <= '{$current_time}' 
         AND `status` = 1 
         LIMIT 10"
    );
    
    while ($message = mysqli_fetch_assoc($messages)) {
        $delete_result = deleteMessage($message['chat_id'], $message['message_id']);
        
        if ($delete_result->ok) {
            // علامت‌گذاری به عنوان حذف شده
            mysqli_query($MySQLi, 
                "UPDATE `auto_delete_messages` 
                 SET `status` = 0 
                 WHERE `id` = '{$message['id']}'"
            );
        }
    }
}// اضافه کردن به منوی ادمین
if (isAdmin($from_id)) {
    $panel = json_encode(['keyboard' => [
        [['text' => "👤 امار ربات"]],
        [['text' => "👥 مدیریت ادمین‌ها"]],
        [['text' => "⏰ مدیریت حذف خودکار"]],
        [['text' => "📪 ارسال به همه"], ['text' => "📪 فوروارد به همه"]],
        [['text' => "🔙"]]
        ], 'resize_keyboard' => true
    ]);
}

// منوی مدیریت حذف خودکار
$auto_delete_menu = json_encode(['keyboard' => [
    [['text' => "⚙️ تنظیم زمان حذف"]],
    [['text' => "📊 وضعیت حذف خودکار"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به بخش پنل ادمین
elseif ($text == "⏰ مدیریت حذف خودکار") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⏰ سیستم حذف خودکار پیام‌ها\n\nاز گزینه‌های زیر استفاده کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $auto_delete_menu
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'auto_delete_management' WHERE `id` = '{$from_id}' LIMIT 1");
}
elseif ($text == "⚙️ تنظیم زمان حذف") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⏱ زمان حذف خودکار را تنظیم کنید:\n\n📝 فرمت: عدد+واحد\nمثال‌ها:\n• 30s - 30 ثانیه\n• 5m - 5 دقیقه\n• 2h - 2 ساعت\n• 1d - 1 روز\n\nپس از تنظیم، پیام بعدی شما به طور خودکار حذف خواهد شد.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back_panel
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'set_delete_time' WHERE `id` = '{$from_id}' LIMIT 1");
}
elseif ($text == "📊 وضعیت حذف خودکار") {
    $stats = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT COUNT(*) as total, 
                SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as active,
                SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as deleted
         FROM `auto_delete_messages`"
    ));
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📊 آمار حذف خودکار:\n\n📨 کل پیام‌ها: {$stats['total']}\n⏳ در انتظار حذف: {$stats['active']}\n✅ حذف شده: {$stats['deleted']}",
        'reply_to_message_id' => $message_id
    ]);
}

// پردازش تنظیم زمان حذف
elseif ($user['step'] == 'set_delete_time') {
    $time_units = [
        's' => 1,           // ثانیه
        'm' => 60,          // دقیقه
        'h' => 3600,        // ساعت
        'd' => 86400        // روز
    ];
    
    $input = strtolower(trim($text));
    $unit = substr($input, -1);
    $number = intval(substr($input, 0, -1));
    
    if (isset($time_units[$unit]) && $number > 0) {
        $seconds = $number * $time_units[$unit];
        
        // ذخیره تنظیمات برای کاربر
        $MySQLi->query("UPDATE `user` SET `step` = 'waiting_for_message', `code` = '{$seconds}' WHERE `id` = '{$from_id}' LIMIT 1");
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ زمان حذف روی {$number} " . 
                     ($unit == 's' ? 'ثانیه' : 
                      ($unit == 'm' ? 'دقیقه' : 
                      ($unit == 'h' ? 'ساعت' : 'روز'))) . 
                     " تنظیم شد.\n\n📨 اکنون پیامی ارسال کنید تا پس از این زمان حذف شود.",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $remove
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ فرمت زمان نامعتبر است!\n\nمثال‌های صحیح:\n30s - 5m - 2h - 1d",
            'reply_to_message_id' => $message_id
        ]);
    }
}// اضافه کردن این کد بعد از هر ارسال پیام مهم
// مثال: بعد از ارسال پیام موفقیت آپلود
$success_message = WSBot('sendmessage', [
    'chat_id' => $chat_id,
    'text' => "📍 فایل شما با موفقیت آپلود شد!",
    'reply_to_message_id' => $message_id
]);

if ($success_message->ok) {
    // حذف خودکار پس از 30 ثانیه
    scheduleAutoDelete($chat_id, $success_message->result->message_id, 30);
}

// یا برای پیام‌های راهنما
if ($user['step'] == 'waiting_for_message') {
    $delete_seconds = $user['code'];
    $sent_message = WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ این پیام پس از {$delete_seconds} ثانیه حذف خواهد شد.",
        'reply_to_message_id' => $message_id
    ]);
    
    if ($sent_message->ok) {
        scheduleAutoDelete($chat_id, $sent_message->result->message_id, $delete_seconds);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'none', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}<?php
// auto_delete.php - برای اجرای دوره‌ای توسط کرون جاب
date_default_timezone_set('Asia/Tehran');
require_once 'bot.php'; // یا include کردن توابع مورد نیاز

// اتصال به دیتابیس
$MySQLi = mysqli_connect('localhost', $Database['username'], $Database['password'], $Database['dbname']);

if (!$MySQLi) {
    die("Connection failed: " . mysqli_connect_error());
}

processAutoDelete();
echo "Auto-delete process completed at " . date('Y-m-d H:i:s');
?># اجرای هر دقیقه
* * * * * php /path/to/auto_delete.php

# یا هر 5 دقیقه
*/5 * * * * php /path/to/auto_delete.php// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `deleted_messages`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `deleted_messages` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `user_id` bigint(20) NOT NULL,
        `file_code` varchar(50) NOT NULL,
        `file_type` varchar(20) NOT NULL,
        `original_message_id` bigint(20) NOT NULL,
        `deleted_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        `download_count` int(11) DEFAULT 0
    )");
}// اضافه کردن به بخش توابع
function saveMessageForReDownload($user_id, $file_code, $file_type, $message_id) {
    global $MySQLi;
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `deleted_messages` 
        (`user_id`, `file_code`, `file_type`, `original_message_id`) 
        VALUES ('{$user_id}', '{$file_code}', '{$file_type}', '{$message_id}')"
    );
}

function getReDownloadButton($user_id) {
    global $MySQLi;
    
    $result = mysqli_query($MySQLi, 
        "SELECT * FROM `deleted_messages` 
         WHERE `user_id` = '{$user_id}' 
         ORDER BY `deleted_at` DESC 
         LIMIT 5"
    );
    
    $buttons = [];
    while ($row = mysqli_fetch_assoc($result)) {
        $file_info = mysqli_fetch_assoc(mysqli_query($MySQLi, 
            "SELECT * FROM `dbfile` WHERE `code` = '{$row['file_code']}'"
        ));
        
        if ($file_info) {
            $file_name = doc($file_info['file']);
            $buttons[] = [
                [
                    'text' => "📥 دانلود مجدد {$file_name}",
                    'callback_data' => "redownload_{$row['file_code']}"
                ]
            ];
        }
    }
    
    return $buttons;
}

function sendReDownloadMessage($chat_id, $user_id, $message_text = "فایل شما حذف شد، اما می‌توانید مجدداً دانلود کنید:") {
    $buttons = getReDownloadButton($user_id);
    
    if (empty($buttons)) {
        return null;
    }
    
    $keyboard = json_encode(['inline_keyboard' => $buttons]);
    
    return WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $message_text,
        'reply_markup' => $keyboard,
        'parse_mode' => 'HTML'
    ]);
}// تغییر تابع processAutoDelete
function processAutoDelete() {
    global $MySQLi;
    
    $current_time = time();
    $messages = mysqli_query($MySQLi, 
        "SELECT ad.*, dm.file_code, dm.file_type, dm.user_id 
         FROM `auto_delete_messages` ad
         LEFT JOIN `deleted_messages` dm ON ad.message_id = dm.original_message_id
         WHERE ad.delete_time <= '{$current_time}' 
         AND ad.status = 1 
         LIMIT 10"
    );
    
    while ($message = mysqli_fetch_assoc($messages)) {
        $delete_result = deleteMessage($message['chat_id'], $message['message_id']);
        
        if ($delete_result->ok) {
            // ذخیره اطلاعات برای دانلود مجدد
            if (!empty($message['file_code'])) {
                // اگر از قبل ذخیره شده، فقط آپدیت کن
                mysqli_query($MySQLi, 
                    "UPDATE `deleted_messages` 
                     SET `deleted_at` = CURRENT_TIMESTAMP 
                     WHERE `original_message_id` = '{$message['message_id']}'"
                );
            }
            
            // ارسال پیام دانلود مجدد
            sendReDownloadMessage($message['chat_id'], $message['user_id']);
            
            // علامت‌گذاری به عنوان حذف شده
            mysqli_query($MySQLi, 
                "UPDATE `auto_delete_messages` 
                 SET `status` = 0 
                 WHERE `id` = '{$message['id']}'"
            );
        }
    }
}// بعد از هر آپلود موفق، اطلاعات را برای دانلود مجدد ذخیره کنید
// مثال برای آپلود document:
if(isset($message->document)) {
    // ... کدهای موجود
    
    $success_message = WSBot('senddocument', [
        'chat_id' => $chat_id,
        'document' => $file_id,
        'caption' => "📍 فایل شما با موفقیت داخل دیتابیس ذخیره شده ... !\n▪️ شناسه فایل شما : <code>$code</code>",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html"
    ]);
    
    if ($success_message->ok) {
        // ذخیره اطلاعات برای دانلود مجدد
        saveMessageForReDownload($from_id, $code, 'document', $success_message->result->message_id);
        
        // زمان‌بندی حذف خودکار (مثلاً 2 دقیقه)
        scheduleAutoDelete($chat_id, $success_message->result->message_id, 120);
    }
    
    // ... بقیه کدها
}// اضافه کردن به بخش callback_query
elseif (strpos($data, "redownload_") === 0) {
    $file_code = str_replace("redownload_", "", $data);
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT * FROM `dbfile` WHERE `code` = '{$file_code}'"
    ));
    
    if ($file_data && $file_data['user_id'] == $fromid) {
        // افزایش شمارنده دانلود مجدد
        mysqli_query($MySQLi, 
            "UPDATE `deleted_messages` 
             SET `download_count` = `download_count` + 1 
             WHERE `file_code` = '{$file_code}' AND `user_id` = '{$fromid}'"
        );
        
        // ارسال فایل مجدد
        $dl = number_format($file_data['dl']);
        $method = $file_data['file'];
        $cap = file_get_contents("files/{$file_data['file_id']}");
        
        WSBot('send'.$file_data['file'], [
            'chat_id' => $chatid,
            "$method" => $file_data['file_id'],
            'caption' => $cap . PHP_EOL . "📥 تعداد دانلود ها : <code>{$dl}</code>\n🔁 دانلود مجدد\n🤖 @$usernamebot",
            'parse_mode' => "html"
        ]);
        
        // پاسخ به کاربر
        WSBot('answercallbackquery', [
            'callback_query_id' => $membercall,
            'text' => "فایل مجدداً برای شما ارسال شد!",
            'show_alert' => false
        ]);
        
        // حذف پیام دکمه‌ها (اختیاری)
        WSBot('deletemessage', [
            'chat_id' => $chatid,
            'message_id' => $messageid
        ]);
        
    } else {
        WSBot('answercallbackquery', [
            'callback_query_id' => $membercall,
            'text' => "❌ فایل یافت نشد یا دسترسی ندارید!",
            'show_alert' => true
        ]);
    }
}// اضافه کردن به منوی اصلی
elseif ($text == "📥 فایل‌های قابل دانلود") {
    $re_downloads = getReDownloadButton($from_id);
    
    if (!empty($re_downloads)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📥 فایل‌هایی که می‌توانید مجدداً دانلود کنید:",
            'reply_to_message_id' => $message_id,
            'reply_markup' => json_encode(['inline_keyboard' => $re_downloads])
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📭 هیچ فایلی برای دانلود مجدد موجود نیست.",
            'reply_to_message_id' => $message_id
        ]);
    }
}// اضافه کردن دکمه جدید به منوی اصلی
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "👤 مدیریت"], ['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
} else {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
}// تغییر در تابع scheduleAutoDelete برای پیام بهتر
function scheduleAutoDelete($chat_id, $message_id, $delete_after_seconds = 60, $file_code = null, $user_id = null) {
    global $MySQLi;
    
    $delete_time = time() + $delete_after_seconds;
    
    // ارسال پیام اطلاع‌رسانی
    $warning_message = WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⏰ این پیام پس از " . formatSeconds($delete_after_seconds) . " حذف خواهد شد.\n\n📥 نگران نباشید، در صورت حذف می‌توانید از بخش «فایل‌های قابل دانلود» مجدداً دریافت کنید.",
        'reply_to_message_id' => $message_id
    ]);
    
    // زمان‌بندی حذف پیام اطلاع‌رسانی هم
    if ($warning_message->ok) {
        mysqli_query($MySQLi, 
            "INSERT INTO `auto_delete_messages` 
            (`chat_id`, `message_id`, `delete_time`) 
            VALUES ('{$chat_id}', '{$warning_message->result->message_id}', '" . ($delete_time - 10) . "')"
        );
    }
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `auto_delete_messages` 
        (`chat_id`, `message_id`, `delete_time`, `file_code`, `user_id`) 
        VALUES ('{$chat_id}', '{$message_id}', '{$delete_time}', '{$file_code}', '{$user_id}')"
    );
}

// تابع فرمت‌بندی زمان
function formatSeconds($seconds) {
    if ($seconds < 60) {
        return $seconds . " ثانیه";
    } elseif ($seconds < 3600) {
        return floor($seconds / 60) . " دقیقه";
    } else {
        return floor($seconds / 3600) . " ساعت";
    }
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `file_interactions`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `file_interactions` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `file_code` varchar(50) NOT NULL,
        `user_id` bigint(20) NOT NULL,
        `interaction_type` enum('view','like','dislike') NOT NULL,
        `interacted_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        INDEX `file_code` (`file_code`),
        INDEX `user_id` (`user_id`),
        UNIQUE KEY `unique_interaction` (`file_code`, `user_id`, `interaction_type`)
    )");
}// اضافه کردن به بخش توابع
function recordInteraction($file_code, $user_id, $type = 'view') {
    global $MySQLi;
    
    // جلوگیری از ثبت تکراری برای لایک/دیسلایک
    if ($type == 'like' || $type == 'dislike') {
        // حذف تعامل مخالف اگر وجود دارد
        mysqli_query($MySQLi, 
            "DELETE FROM `file_interactions` 
             WHERE `file_code` = '{$file_code}' 
             AND `user_id` = '{$user_id}' 
             AND `interaction_type` IN ('like', 'dislike')"
        );
    }
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `file_interactions` 
        (`file_code`, `user_id`, `interaction_type`) 
        VALUES ('{$file_code}', '{$user_id}', '{$type}')
        ON DUPLICATE KEY UPDATE `interacted_at` = CURRENT_TIMESTAMP"
    );
}

function getFileStats($file_code) {
    global $MySQLi;
    
    $stats = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT 
            COUNT(CASE WHEN interaction_type = 'view' THEN 1 END) as views,
            COUNT(CASE WHEN interaction_type = 'like' THEN 1 END) as likes,
            COUNT(CASE WHEN interaction_type = 'dislike' THEN 1 END) as dislikes
         FROM `file_interactions` 
         WHERE `file_code` = '{$file_code}'"
    ));
    
    return [
        'views' => $stats['views'] ?: 0,
        'likes' => $stats['likes'] ?: 0,
        'dislikes' => $stats['dislikes'] ?: 0
    ];
}

function getUserInteraction($file_code, $user_id) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT `interaction_type` 
         FROM `file_interactions` 
         WHERE `file_code` = '{$file_code}' 
         AND `user_id` = '{$user_id}'
         AND `interaction_type` IN ('like', 'dislike')"
    ));
    
    return $result ? $result['interaction_type'] : null;
}

function formatNumber($number) {
    if ($number >= 1000000) {
        return round($number / 1000000, 1) . 'M';
    } elseif ($number >= 1000) {
        return round($number / 1000, 1) . 'K';
    }
    return $number;
}// تابع ایجاد دکمه‌های تعامل
function getInteractionKeyboard($file_code, $user_id = null) {
    $stats = getFileStats($file_code);
    $user_interaction = $user_id ? getUserInteraction($file_code, $user_id) : null;
    
    // انتخاب ایموجی‌های فعال/غیرفعال بر اساس تعامل کاربر
    $like_emoji = ($user_interaction == 'like') ? '👍' : '👆';
    $dislike_emoji = ($user_interaction == 'dislike') ? '👎' : '👇';
    
    $keyboard = [
        'inline_keyboard' => [
            [
                [
                    'text' => "{$like_emoji} " . formatNumber($stats['likes']),
                    'callback_data' => "like_{$file_code}"
                ],
                [
                    'text' => "👁 " . formatNumber($stats['views']),
                    'callback_data' => "view_{$file_code}"
                ],
                [
                    'text' => "{$dislike_emoji} " . formatNumber($stats['dislikes']),
                    'callback_data' => "dislike_{$file_code}"
                ]
            ],
            [
                [
                    'text' => "📥 دانلود مجدد",
                    'callback_data' => "redownload_{$file_code}"
                ],
                [
                    'text' => "🔄 اشتراک گذاری",
                    'callback_data' => "share_{$file_code}"
                ]
            ]
        ]
    ];
    
    return json_encode($keyboard);
}// اضافه کردن به بخش callback_query
elseif (strpos($data, "like_") === 0) {
    $file_code = str_replace("like_", "", $data);
    recordInteraction($file_code, $fromid, 'like');
    
    // آپدیت کیبورد
    $new_keyboard = getInteractionKeyboard($file_code, $fromid);
    WSBot('editmessagereplymarkup', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'reply_markup' => $new_keyboard
    ]);
    
    WSBot('answercallbackquery', [
        'callback_query_id' => $membercall,
        'text' => "👍 لایک شما ثبت شد!",
        'show_alert' => false
    ]);
}
elseif (strpos($data, "dislike_") === 0) {
    $file_code = str_replace("dislike_", "", $data);
    recordInteraction($file_code, $fromid, 'dislike');
    
    $new_keyboard = getInteractionKeyboard($file_code, $fromid);
    WSBot('editmessagereplymarkup', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'reply_markup' => $new_keyboard
    ]);
    
    WSBot('answercallbackquery', [
        'callback_query_id' => $membercall,
        'text' => "👎 دیسلایک شما ثبت شد!",
        'show_alert' => false
    ]);
}
elseif (strpos($data, "share_") === 0) {
    $file_code = str_replace("share_", "", $data);
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT * FROM `dbfile` WHERE `code` = '{$file_code}'"
    ));
    
    if ($file_data) {
        $share_url = "https://t.me/" . $usernamebot . "?start=_" . $file_code;
        WSBot('answercallbackquery', [
            'callback_query_id' => $membercall,
            'text' => "🔗 لینک اشتراک‌گذاری:\n" . $share_url,
            'show_alert' => true
        ]);
    }
}// تغییر در تمام بخش‌های ارسال فایل (مثال برای document)
if(isset($message->document)) {
    // ... کدهای موجود
    
    $file_stats = getFileStats($code);
    recordInteraction($code, $from_id, 'view'); // ثبت بازدید
    
    $interaction_keyboard = getInteractionKeyboard($code, $from_id);
    
    $success_message = WSBot('senddocument', [
        'chat_id' => $chat_id,
        'document' => $file_id,
        'caption' => "📍 فایل شما با موفقیت آپلود شد!\n" .
                    "▪️ شناسه: <code>{$code}</code>\n" .
                    "👁 بازدید: " . formatNumber($file_stats['views']) . "\n" .
                    "👍 لایک: " . formatNumber($file_stats['likes']) . " | 👎 دیسلایک: " . formatNumber($file_stats['dislikes']) . "\n" .
                    "📊 کیفیت: 480p BluRay\n" .
                    "🎬 زیرنویس: فارسی هاردساب\n\n" .
                    "📥 برای دانلود مجدد از دکمه زیر استفاده کنید:",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html",
        'reply_markup' => $interaction_keyboard
    ]);
    
    // ... بقیه کدها
}// تابع ایجاد caption پیشرفته
function getAdvancedCaption($file_data, $include_stats = true) {
    global $usernamebot;
    
    $stats = $include_stats ? getFileStats($file_data['code']) : ['views' => 0, 'likes' => 0, 'dislikes' => 0];
    $file_size = convert($file_data['file_size']);
    $dl = number_format($file_data['dl']);
    
    $caption = "🎬 " . doc($file_data['file']) . "\n";
    $caption .= "💾 حجم: " . $file_size . "\n";
    $caption .= "⏰ مدت زمان: 1:34:59\n"; // می‌توانید از متادیتا فایل استفاده کنید
    $caption .= "📺 کیفیت: 480p BluRay\n";
    $caption .= "🎞 زیرنویس: فارسی هاردساب\n\n";
    
    if ($include_stats) {
        $caption .= "📊 آمار تعامل:\n";
        $caption .= "👁 بازدید: " . formatNumber($stats['views']) . "\n";
        $caption .= "👍 لایک: " . formatNumber($stats['likes']) . " | 👎 دیسلایک: " . formatNumber($stats['dislikes']) . "\n";
        $caption .= "📥 دانلود: " . $dl . "\n\n";
    }
    
    $caption .= "💡 راهنمای پخش:\n";
    $caption .= "• Android: MX Player\n";
    $caption .= "• iOS: VLC Player\n";
    $caption .= "• Windows: Pot Player\n\n";
    
    $caption .= "🔗 @" . $usernamebot . " | @LOVEMOVE11";
    
    return $caption;
}// تابع استخراج اطلاعات از فایل (برای ویدیوها)
function getFileMetadata($file_id, $file_type) {
    // این تابع می‌تواند اطلاعاتی مانند مدت زمان ویدیو را استخراج کند
    // در اینجا مقادیر ثابت برگردانده می‌شود، می‌توانید با APIهای دیگر تکمیل کنید
    return [
        'duration' => '1:34:59',
        'quality' => '480p BluRay',
        'subtitle' => 'فارسی هاردساب'
    ];
}// تابع ایجاد پیام اشتراک‌گذاری
function getShareMessage($file_code) {
    global $usernamebot;
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT * FROM `dbfile` WHERE `code` = '{$file_code}'"
    ));
    
    if (!$file_data) return null;
    
    $stats = getFileStats($file_code);
    $metadata = getFileMetadata($file_data['file_id'], $file_data['file_type']);
    
    $message = "🎬 فیلم جدید در آپلودر!\n\n";
    $message .= "📁 " . doc($file_data['file']) . "\n";
    $message .= "⏰ " . $metadata['duration'] . "\n";
    $message .= "📺 " . $metadata['quality'] . "\n";
    $message .= "🎞 " . $metadata['subtitle'] . "\n\n";
    $message .= "📊 آمار: 👁 " . formatNumber($stats['views']) . " | 👍 " . formatNumber($stats['likes']) . "\n\n";
    $message .= "👇 برای دانلود روی لینک زیر کلیک کنید:\n";
    $message .= "https://t.me/" . $usernamebot . "?start=_" . $file_code;
    
    return $message;
}// اضافه کردن به منوی اصلی
elseif ($text == "🔥 پرطرفدارترین‌ها") {
    $popular_files = mysqli_query($MySQLi,
        "SELECT f.*, 
                COUNT(CASE WHEN i.interaction_type = 'like' THEN 1 END) as likes,
                COUNT(CASE WHEN i.interaction_type = 'view' THEN 1 END) as views
         FROM `dbfile` f
         LEFT JOIN `file_interactions` i ON f.code = i.file_code
         GROUP BY f.code
         ORDER BY likes DESC, views DESC
         LIMIT 10"
    );
    
    if (mysqli_num_rows($popular_files) > 0) {
        $message = "🔥 پرطرفدارترین فایل‌ها:\n\n";
        $counter = 1;
        
        while ($file = mysqli_fetch_assoc($popular_files)) {
            $message .= "{$counter}. 📁 " . doc($file['file']) . "\n";
            $message .= "   👍 " . formatNumber($file['likes']) . " | 👁 " . formatNumber($file['views']) . "\n";
            $message .= "   📥 /dl_{$file['code']}\n➖➖➖➖➖\n";
            $counter++;
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📭 هنوز هیچ فایل پرطرفداری وجود ندارد.",
            'reply_to_message_id' => $message_id
        ]);
    }
}// اضافه کردن دکمه جدید به منوی اصلی
$menu = json_encode(['keyboard' => [
    [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
    [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
    [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🔐 تنظیم پسورد"]],
    [['text' => "🗑 حذف فایل"], ['text' => "🗂 کد پیگیری فایل"]]
    ], 'resize_keyboard' => true
]);if(isset($message->document)) {
    $file_id = $message->document->file_id;
    $file_size = $message->document->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        file_put_contents("files/$file_id",$message->caption);
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('senddocument', [
            'chat_id' => $chat_id,
            'document' => $file_id,
            'caption' => getAdvancedCaption([
                'code' => $code,
                'file' => 'document',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'document', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}if(isset($message->video)) {
    $file_id = $message->video->file_id;
    $file_size = $message->video->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        file_put_contents("files/$file_id",$message->caption);
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('sendvideo', [
            'chat_id' => $chat_id,
            'video' => $file_id,
            'caption' => getAdvancedCaption([
                'code' => $code,
                'file' => 'video',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'video', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}if(isset($message->photo)) {
    $photo = $message->photo;
    $file_id = $photo[count($photo)-1]->file_id;
    $file_size = $photo[count($photo)-1]->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        file_put_contents("files/$file_id",$message->caption);
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('sendphoto', [
            'chat_id' => $chat_id,
            'photo' => $file_id,
            'caption' => getAdvancedCaption([
                'code' => $code,
                'file' => 'photo',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'photo', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}if(isset($message->voice)) {
    $file_id = $message->voice->file_id;
    $file_size = $message->voice->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        file_put_contents("files/$file_id",$message->caption);
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('sendvoice', [
            'chat_id' => $chat_id,
            'voice' => $file_id,
            'caption' => getAdvancedCaption([
                'code' => $code,
                'file' => 'voice',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'voice', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}if(isset($message->audio)) {
    $file_id = $message->audio->file_id;
    $file_size = $message->audio->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        file_put_contents("files/$file_id",$message->caption);
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('sendaudio', [
            'chat_id' => $chat_id,
            'audio' => $file_id,
            'caption' => getAdvancedCaption([
                'code' => $code,
                'file' => 'audio',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'audio', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}if(isset($message->sticker)) {
    $file_id = $message->sticker->file_id;
    $file_size = $message->sticker->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    // ❌ حذف شرط محدودیت
    if(!$file) {
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        WSBot('sendsticker', [
            'chat_id' => $chat_id,
            'sticker' => $file_id,
            'reply_to_message_id' => $message_id
        ]);
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => getAdvancedCaption([
                'code' => $code,
                'file' => 'sticker',
                'file_size' => $file_size,
                'dl' => 1
            ]),
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'sticker', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
    }
    // ❌ حذف else مربوط به محدودیت حجم
}function convert($size){
    $units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];
    $i = floor(log($size, 1024));
    
    // برای حجم‌های بسیار بزرگ
    if ($i >= 5) {
        return round($size / pow(1024, 5), 2) . ' PB';
    }
    
    return round($size / pow(1024, $i), 2) . ' ' . $units[$i];
}if (preg_match('/^\/(start)$/i', $text) or $text == "🔙") {
    $admin_status = "";
    if (isAdmin($from_id)) {
        if ($from_id == 414816264) {
            $admin_status = "\n\n👑 شما ادمین اصلی این ربات هستید!";
        } else {
            $admin_status = "\n\n⚡ شما دسترسی ادمین دارید!";
        }
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "👤 سلام <code>$first_name</code>\n🤖 به ربات کلیپ کپشن خوش امدید!{$admin_status}\n\n🏷 اپلود رایگان و دائم فایل ها بدون محدودیت حجمی!\n\n🚦 شما میتوانید فایل‌های با هر حجمی (عکس , فیلم , گیف , استیکر و ...) در ربات اپلود کنید\n\n📤 همین الان فایلاتو اپلود کن و لذتشو ببر!\n\n🤖 @$usernamebot\n📢 @{$Config['channel']}",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html",
        'reply_markup' => $menu
    ]);
    
    // ... بقیه کد
}// تابع بررسی امکان آپلود فایل‌های بزرگ
function canHandleLargeFiles() {
    // بررسی تنظیمات سرور برای پشتیبانی از فایل‌های بزرگ
    $max_upload = ini_get('upload_max_filesize');
    $max_post = ini_get('post_max_size');
    $memory_limit = ini_get('memory_limit');
    
    return [
        'upload_max_filesize' => $max_upload,
        'post_max_size' => $max_post,
        'memory_limit' => $memory_limit,
        'can_handle_large' => true // همیشه true چون از file_id استفاده می‌کنیم
    ];
}

// اضافه کردن به بخش اطلاعات ربات برای ادمین
elseif ($text == "🖥 اطلاعات سرور") {
    if (isAdmin($from_id)) {
        $server_info = canHandleLargeFiles();
        $info_message = "🖥 اطلاعات سرور:\n\n";
        $info_message .= "📁 upload_max_filesize: " . $server_info['upload_max_filesize'] . "\n";
        $info_message .= "📮 post_max_size: " . $server_info['post_max_size'] . "\n";
        $info_message .= "💾 memory_limit: " . $server_info['memory_limit'] . "\n";
        $info_message .= "🚀 پشتیبانی از فایل‌های بزرگ: ✅ فعال\n";
        $info_message .= "📊 حداکثر حجم: نامحدود (مطابق با محدودیت تلگرام)";
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $info_message,
            'reply_to_message_id' => $message_id
        ]);
    }
}if (isAdmin($from_id)) {
    $panel = json_encode(['keyboard' => [
        [['text' => "👤 امار ربات"]],
        [['text' => "👥 مدیریت ادمین‌ها"]],
        [['text' => "⏰ مدیریت حذف خودکار"], ['text' => "🖥 اطلاعات سرور"]],
        [['text' => "📪 ارسال به همه"], ['text' => "📪 فوروارد به همه"]],
        [['text' => "🔙"]]
        ], 'resize_keyboard' => true
    ]);
}# در فایل php.ini این تنظیمات را بررسی کنید:
upload_max_filesize = 2G
post_max_size = 2G
memory_limit = 1G
max_execution_time = 300// افزایش زمان اجرا برای فایل‌های بزرگ
set_time_limit(300); // 5 دقیقه

// مدیریت حافظه بهتر
ini_set('memory_limit', '1G');// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `file_metadata`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `file_metadata` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `file_code` varchar(50) NOT NULL UNIQUE,
        `file_id` varchar(200) NOT NULL,
        `user_id` bigint(20) NOT NULL,
        `caption` text CHARACTER SET utf8mb4,
        `custom_title` varchar(255) DEFAULT NULL,
        `description` text CHARACTER SET utf8mb4,
        `tags` varchar(500) DEFAULT NULL,
        `is_public` tinyint(1) DEFAULT 1,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        `updated_at` timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        INDEX `file_code` (`file_code`),
        INDEX `user_id` (`user_id`)
    )");
}// اضافه کردن به بخش توابع
function saveFileMetadata($file_code, $file_id, $user_id, $caption = '', $custom_title = null) {
    global $MySQLi;
    
    $caption = mysqli_real_escape_string($MySQLi, $caption);
    $custom_title = mysqli_real_escape_string($MySQLi, $custom_title);
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `file_metadata` 
        (`file_code`, `file_id`, `user_id`, `caption`, `custom_title`) 
        VALUES ('{$file_code}', '{$file_id}', '{$user_id}', '{$caption}', '{$custom_title}')
        ON DUPLICATE KEY UPDATE 
        `caption` = '{$caption}',
        `custom_title` = '{$custom_title}',
        `updated_at` = CURRENT_TIMESTAMP"
    );
}

function getFileMetadata($file_code) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `file_metadata` WHERE `file_code` = '{$file_code}'"
    ));
    
    return $result ?: [];
}

function updateFileCaption($file_code, $new_caption) {
    global $MySQLi;
    
    $new_caption = mysqli_real_escape_string($MySQLi, $new_caption);
    
    // آپدیت هم در دیتابیس و هم در فایل
    $metadata = getFileMetadata($file_code);
    if ($metadata) {
        file_put_contents("files/{$metadata['file_id']}", $new_caption);
    }
    
    return mysqli_query($MySQLi,
        "UPDATE `file_metadata` 
         SET `caption` = '{$new_caption}', `updated_at` = CURRENT_TIMESTAMP 
         WHERE `file_code` = '{$file_code}'"
    );
}

function deleteFileCompletely($file_code, $user_id) {
    global $MySQLi;
    
    // دریافت اطلاعات فایل
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `dbfile` WHERE `code` = '{$file_code}' AND `user_id` = '{$user_id}'"
    ));
    
    if ($file_data) {
        // حذف از دیتابیس اصلی
        mysqli_query($MySQLi, "DELETE FROM `dbfile` WHERE `code` = '{$file_code}'");
        
        // حذف متادیتا
        mysqli_query($MySQLi, "DELETE FROM `file_metadata` WHERE `file_code` = '{$file_code}'");
        
        // حذف تعاملات
        mysqli_query($MySQLi, "DELETE FROM `file_interactions` WHERE `file_code` = '{$file_code}'");
        
        // حذف فایل کپشن (اختیاری)
        if (file_exists("files/{$file_data['file_id']}")) {
            unlink("files/{$file_data['file_id']}");
        }
        
        return true;
    }
    
    return false;
}// منوی مدیریت فایل‌ها
$file_management = json_encode(['keyboard' => [
    [['text' => "✏️ ویرایش کپشن"], ['text' => "📝 تغییر عنوان"]],
    [['text' => "🏷 افزودن تگ"], ['text' => "👁 تغییر وضعیت عمومی"]],
    [['text' => "🗑 حذف کامل فایل"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به منوی اصلی
elseif ($text == "🛠 مدیریت فایل‌ها") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🛠 مدیریت فایل‌های شما\n\nاز گزینه‌های زیر برای مدیریت فایل‌های خود استفاده کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $file_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'file_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

// ویرایش کپشن
elseif ($text == "✏️ ویرایش کپشن") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✏️ ویرایش کپشن فایل\n\nلطفاً شناسه فایل را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'edit_caption_code' WHERE `id` = '{$from_id}' LIMIT 1");
}

// تغییر عنوان
elseif ($text == "📝 تغییر عنوان") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📝 تغییر عنوان فایل\n\nلطفاً شناسه فایل را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'edit_title_code' WHERE `id` = '{$from_id}' LIMIT 1");
}

// حذف کامل فایل
elseif ($text == "🗑 حذف کامل فایل") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🗑 حذف کامل فایل\n\nاین عمل غیرقابل بازگشت است!\nلطفاً شناسه فایل را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'delete_file_code' WHERE `id` = '{$from_id}' LIMIT 1");
}// پردازش ویرایش کپشن
elseif ($user['step'] == 'edit_caption_code') {
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `dbfile` WHERE `code` = '{$text}' AND `user_id` = '{$from_id}'"
    ));
    
    if ($file_data) {
        $current_metadata = getFileMetadata($text);
        $current_caption = $current_metadata['caption'] ?: 'بدون کپشن';
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✏️ ویرایش کپشن فایل\n\nکپشن فعلی:\n{$current_caption}\n\nلطفاً کپشن جدید را ارسال کنید:",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'edit_caption_text', `code` = '{$text}' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ فایل یافت نشد یا شما دسترسی ندارید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

elseif ($user['step'] == 'edit_caption_text') {
    $file_code = $user['code'];
    
    if (updateFileCaption($file_code, $text)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ کپشن فایل با موفقیت ویرایش شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $file_management
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ خطا در ویرایش کپشن!",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'file_management', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}

// پردازش تغییر عنوان
elseif ($user['step'] == 'edit_title_code') {
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `dbfile` WHERE `code` = '{$text}' AND `user_id` = '{$from_id}'"
    ));
    
    if ($file_data) {
        $current_metadata = getFileMetadata($text);
        $current_title = $current_metadata['custom_title'] ?: 'بدون عنوان سفارشی';
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📝 تغییر عنوان فایل\n\nعنوان فعلی:\n{$current_title}\n\nلطفاً عنوان جدید را ارسال کنید:",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'edit_title_text', `code` = '{$text}' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ فایل یافت نشد یا شما دسترسی ندارید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

elseif ($user['step'] == 'edit_title_text') {
    $file_code = $user['code'];
    
    $new_title = mysqli_real_escape_string($MySQLi, $text);
    mysqli_query($MySQLi,
        "UPDATE `file_metadata` 
         SET `custom_title` = '{$new_title}', `updated_at` = CURRENT_TIMESTAMP 
         WHERE `file_code` = '{$file_code}'"
    );
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ عنوان فایل با موفقیت تغییر کرد!",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $file_management
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'file_management', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}

// پردازش حذف کامل فایل
elseif ($user['step'] == 'delete_file_code') {
    $file_code = $text;
    
    if (deleteFileCompletely($file_code, $from_id)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ فایل با موفقیت حذف شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $file_management
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ خطا در حذف فایل!",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'file_management', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}// تغییر در تمام بخش‌های آپلود برای ذخیره‌سازی متادیتا
// مثال برای document:
if(isset($message->document)) {
    $file_id = $message->document->file_id;
    $file_size = $message->document->file_size;
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    if(!$file) {
        // ذخیره کپشن در فایل
        file_put_contents("files/$file_id", $message->caption ?: '');
        
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ذخیره متادیتا در دیتابیس
        saveFileMetadata($code, $file_id, $from_id, $message->caption ?: '');
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        $caption = getAdvancedCaption([
            'code' => $code,
            'file' => 'document',
            'file_size' => $file_size,
            'dl' => 1,
            'caption' => $message->caption
        ]);
        
        $success_message = WSBot('senddocument', [
            'chat_id' => $chat_id,
            'document' => $file_id,
            'caption' => $caption,
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', 'document', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        if (!$user) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
    }
    // ... بقیه کد
}function getAdvancedCaption($file_data, $include_stats = true) {
    global $usernamebot;
    
    $stats = $include_stats ? getFileStats($file_data['code']) : ['views' => 0, 'likes' => 0, 'dislikes' => 0];
    $file_size = convert($file_data['file_size']);
    $dl = number_format($file_data['dl']);
    
    // دریافت متادیتا اضافی
    $metadata = getFileMetadata($file_data['code']);
    $custom_title = $metadata['custom_title'] ?? null;
    $caption = $metadata['caption'] ?? ($file_data['caption'] ?? '');
    
    $final_caption = "";
    
    // عنوان سفارشی یا پیش‌فرض
    if ($custom_title) {
        $final_caption .= "🎬 " . $custom_title . "\n";
    } else {
        $final_caption .= "🎬 " . doc($file_data['file']) . "\n";
    }
    
    $final_caption .= "💾 حجم: " . $file_size . "\n";
    $final_caption .= "⏰ مدت زمان: 1:34:59\n";
    $final_caption .= "📺 کیفیت: 480p BluRay\n";
    $final_caption .= "🎞 زیرنویس: فارسی هاردساب\n\n";
    
    // کپشن کاربر
    if ($caption) {
        $final_caption .= "📝 توضیحات:\n" . $caption . "\n\n";
    }
    
    if ($include_stats) {
        $final_caption .= "📊 آمار تعامل:\n";
        $final_caption .= "👁 بازدید: " . formatNumber($stats['views']) . "\n";
        $final_caption .= "👍 لایک: " . formatNumber($stats['likes']) . " | 👎 دیسلایک: " . formatNumber($stats['dislikes']) . "\n";
        $final_caption .= "📥 دانلود: " . $dl . "\n\n";
    }
    
    $final_caption .= "💡 راهنمای پخش:\n";
    $final_caption .= "• Android: MX Player\n";
    $final_caption .= "• iOS: VLC Player\n";
    $final_caption .= "• Windows: Pot Player\n\n";
    
    $final_caption .= "🔗 @" . $usernamebot . " | @LOVEMOVE11";
    
    return $final_caption;
}// اضافه کردن دکمه مدیریت فایل‌ها
$menu = json_encode(['keyboard' => [
    [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
    [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
    [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🛠 مدیریت فایل‌ها"]],
    [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
    [['text' => "🗂 کد پیگیری فایل"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن دستور ریپلای برای ویرایش سریع
elseif (strpos($text, '/editcaption') === 0 && isset($message->reply_to_message)) {
    $reply_message = $message->reply_to_message;
    
    // بررسی اینکه پیام ریپلای شده حاوی فایل است
    if (isset($reply_message->document) || isset($reply_message->video) || 
        isset($reply_message->photo) || isset($reply_message->audio) || 
        isset($reply_message->voice)) {
        
        // استخراج file_id از پیام ریپلای شده
        if (isset($reply_message->document)) {
            $file_id = $reply_message->document->file_id;
        } elseif (isset($reply_message->video)) {
            $file_id = $reply_message->video->file_id;
        } elseif (isset($reply_message->photo)) {
            $photo = $reply_message->photo;
            $file_id = $photo[count($photo)-1]->file_id;
        } elseif (isset($reply_message->audio)) {
            $file_id = $reply_message->audio->file_id;
        } elseif (isset($reply_message->voice)) {
            $file_id = $reply_message->voice->file_id;
        }
        
        // یافتن file_code از file_id
        $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' AND `user_id` = '{$from_id}'"
        ));
        
        if ($file_data) {
            $new_caption = str_replace('/editcaption', '', $text);
            if (updateFileCaption($file_data['code'], trim($new_caption))) {
                WSBot('sendmessage', [
                    'chat_id' => $chat_id,
                    'text' => "✅ کپشن فایل با موفقیت ویرایش شد!",
                    'reply_to_message_id' => $message_id
                ]);
            }
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ فایل یافت نشد یا شما دسترسی ندارید!",
                'reply_to_message_id' => $message_id
            ]);
        }
    }
}// منوی کاربران عادی - حذف گزینه‌های آپلود
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "👤 مدیریت"], ['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
} else {
    // منوی کاربران عادی فقط شامل دانلود و جستجو
    $menu = json_encode(['keyboard' => [
        [['text' => "🔍 جستجوی فایل"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🎫 حساب کاربری"]],
        [['text' => "📚 راهنما"]]
        ], 'resize_keyboard' => true
    ]);
}// تغییر پیام start برای کاربران عادی
if (preg_match('/^\/(start)$/i', $text) or $text == "🔙") {
    $admin_status = "";
    if (isAdmin($from_id)) {
        if ($from_id == 414816264) {
            $admin_status = "\n\n👑 شما ادمین اصلی این ربات هستید!";
        } else {
            $admin_status = "\n\n⚡ شما دسترسی ادمین دارید!";
        }
        
        $welcome_text = "👤 سلام <code>$first_name</code>\n🤖 به پنل مدیریت ربات خوش آمدید!{$admin_status}";
    } else {
        $welcome_text = "👤 سلام <code>$first_name</code>\n🤖 به کتابخانه فایل‌های ما خوش آمدید!\n\n📚 در این ربات می‌توانید فایل‌های مختلف را جستجو و دانلود کنید.\n\n🔍 برای شروع از دکمه‌های زیر استفاده کنید:";
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $welcome_text . "\n\n🤖 @$usernamebot\n📢 @{$Config['channel']}",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html",
        'reply_markup' => $menu
    ]);
    
    if (!$user) {
        $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
    } else {
        $MySQLi->query("UPDATE `user` SET `step` = 'none', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
    }
}// اضافه کردن بررسی ادمین قبل از هر آپلود
if(isset($message->document)) {
    // بررسی آیا کاربر ادمین است
    if (!isAdmin($from_id)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ شما مجوز آپلود فایل ندارید!\n\nفقط ادمین‌های ربات می‌توانند فایل آپلود کنند.",
            'reply_to_message_id' => $message_id
        ]);
        exit();
    }
    
    // بقیه کدهای آپلود فقط برای ادمین‌ها
    $file_id = $message->document->file_id;
    $file_size = $message->document->file_size;
    // ... بقیه کد آپلود
}

// همین بررسی را برای انواع فایل‌های دیگر اضافه کنید:
// - video
// - photo  
// - voice
// - audio
// - sticker
// - آپلود گروهی// اضافه کردن ایندکس برای جستجوی بهتر
if ($MySQLi->query("SELECT * FROM `search_index`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `search_index` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `file_code` varchar(50) NOT NULL,
        `search_text` text CHARACTER SET utf8mb4,
        `file_type` varchar(20) NOT NULL,
        `is_public` tinyint(1) DEFAULT 1,
        INDEX `search_text` (`search_text`(255)),
        INDEX `file_type` (`file_type`)
    )");
}// توابع جستجو
function addToSearchIndex($file_code, $caption, $file_type, $custom_title = null) {
    global $MySQLi;
    
    $search_text = $custom_title ? $custom_title . ' ' . $caption : $caption;
    $search_text = mysqli_real_escape_string($MySQLi, $search_text);
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `search_index` 
        (`file_code`, `search_text`, `file_type`) 
        VALUES ('{$file_code}', '{$search_text}', '{$file_type}')
        ON DUPLICATE KEY UPDATE `search_text` = '{$search_text}'"
    );
}

function searchFiles($query, $limit = 10) {
    global $MySQLi;
    
    $query = mysqli_real_escape_string($MySQLi, $query);
    $results = mysqli_query($MySQLi,
        "SELECT si.*, fm.custom_title, fm.caption, d.file_size, d.dl
         FROM `search_index` si
         LEFT JOIN `file_metadata` fm ON si.file_code = fm.file_code
         LEFT JOIN `dbfile` d ON si.file_code = d.code
         WHERE si.search_text LIKE '%{$query}%' 
         AND si.is_public = 1
         ORDER BY d.dl DESC
         LIMIT {$limit}"
    );
    
    $files = [];
    while ($row = mysqli_fetch_assoc($results)) {
        $files[] = $row;
    }
    return $files;
}// پردازش جستجو
elseif ($text == "🔍 جستجوی فایل") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔍 جستجوی فایل\n\nلطفاً کلمه کلیدی مورد نظر را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'search_files' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'search_files') {
    $results = searchFiles($text, 10);
    
    if (count($results) > 0) {
        $message = "🔍 نتایج جستجو برای: \"{$text}\"\n\n";
        
        foreach ($results as $index => $file) {
            $message .= ($index + 1) . ". 📁 " . ($file['custom_title'] ?: doc($file['file_type'])) . "\n";
            $message .= "   📊 دانلود: " . formatNumber($file['dl']) . "\n";
            $message .= "   💾 حجم: " . convert($file['file_size']) . "\n";
            $message .= "   📥 /dl_" . $file['file_code'] . "\n➖➖➖➖➖\n";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ هیچ نتیجه‌ای برای جستجوی \"{$text}\" یافت نشد.",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'none' WHERE `id` = '{$from_id}' LIMIT 1");
}// در بخش ارسال فایل به کاربران، اطلاعات کامل‌تری نمایش دهید
function getPublicCaption($file_data) {
    global $usernamebot;
    
    $metadata = getFileMetadata($file_data['code']);
    $stats = getFileStats($file_data['code']);
    
    $caption = "";
    
    if ($metadata['custom_title']) {
        $caption .= "🎬 " . $metadata['custom_title'] . "\n";
    } else {
        $caption .= "📁 " . doc($file_data['file']) . "\n";
    }
    
    $caption .= "💾 حجم: " . convert($file_data['file_size']) . "\n";
    $caption .= "📊 دانلود: " . formatNumber($file_data['dl']) . "\n";
    $caption .= "👁 بازدید: " . formatNumber($stats['views']) . "\n";
    $caption .= "👍 لایک: " . formatNumber($stats['likes']) . "\n\n";
    
    if ($metadata['caption']) {
        $caption .= "📝 توضیحات:\n" . $metadata['caption'] . "\n\n";
    }
    
    $caption .= "🔗 @" . $usernamebot;
    
    return $caption;
}// وقتی کاربر با لینک فایل می‌آید، فقط اجازه دانلود داشته باشد
elseif(strpos($text, "/start _") !== false) {
    $idFile = str_replace("/start _", null, $text);
    $dataFile = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `code` = '{$idFile}' LIMIT 1"));
    
    // بررسی اینکه فایل public است
    $metadata = getFileMetadata($idFile);
    if (!$metadata || $metadata['is_public'] == 0) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ این فایل در دسترس نیست یا حذف شده است.",
            'reply_to_message_id' => $message_id
        ]);
        exit();
    }
    
    // بقیه کد دانلود بدون تغییر
    // ...
}elseif ($text == "📚 راهنما") {
    $help_text = "📚 راهنمای استفاده از ربات\n\n";
    $help_text .= "🔍 **جستجوی فایل**:\n";
    $help_text .= "برای یافتن فایل مورد نظر از دکمه جستجو استفاده کنید.\n\n";
    $help_text .= "📥 **دانلود فایل**:\n";
    $help_text .= "پس از یافتن فایل، روی آن کلیک کنید تا دانلود شود.\n\n";
    $help_text .= "🔥 **پرطرفدارترین‌ها**:\n";
    $help_text .= "فایل‌های پربازدید و پرطرفدار را ببینید.\n\n";
    $help_text .= "📱 **اشتراک‌گذاری**:\n";
    $help_text .= "می‌توانید فایل‌ها را با دوستان خود به اشتراک بگذارید.\n\n";
    $help_text .= "💡 **نکات**:\n";
    $help_text .= "• فایل‌ها به صورت دائمی ذخیره می‌شوند\n";
    $help_text .= "• دانلود بدون محدودیت تعداد\n";
    $help_text .= "• کیفیت اصلی فایل‌ها حفظ می‌شود\n\n";
    $help_text .= "🤖 @$usernamebot";
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $help_text,
        'reply_to_message_id' => $message_id,
        'parse_mode' => "Markdown"
    ]);
}// وقتی ادمین فایل آپلود می‌کند، به ایندکس جستجو اضافه شود
// بعد از هر آپلود موفق توسط ادمین:
addToSearchIndex($code, $message->caption ?: '', $file_data['file'], $custom_title);// ایجاد جدول دسته‌بندی‌ها
if ($MySQLi->query("SELECT * FROM `file_categories`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `file_categories` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `name` varchar(100) NOT NULL,
        `description` text,
        `created_by` bigint(20) NOT NULL,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP
    )");
    
    // دسته‌بندی‌های پیش‌فرض
    mysqli_query($MySQLi, "INSERT INTO `file_categories` (`name`, `description`, `created_by`) VALUES 
        ('فیلم', 'فیلم‌های سینمایی و سریال', 414816264),
        ('موزیک', 'آهنگ‌ها و موسیقی', 414816264),
        ('عکس', 'عکس‌ها و تصاویر', 414816264),
        ('سند', 'فایل‌های متنی و PDF', 414816264)
    ");
}

// اضافه کردن فیلد دسته‌بندی به متادیتا
if ($MySQLi->query("SELECT category_id FROM `file_metadata`") == false) {
    mysqli_query($MySQLi, "ALTER TABLE `file_metadata` ADD `category_id` int(11) DEFAULT NULL");
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `bot_settings`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `bot_settings` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `setting_key` varchar(50) NOT NULL UNIQUE,
        `setting_value` tinyint(1) DEFAULT 1,
        `description` varchar(255) DEFAULT NULL,
        `updated_at` timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    )");
    
    // تنظیمات پیش‌فرض
    mysqli_query($MySQLi, "INSERT INTO `bot_settings` (`setting_key`, `setting_value`, `description`) VALUES 
        ('search_enabled', 1, 'فعال بودن جستجو برای کاربران عادی'),
        ('popular_enabled', 1, 'فعال بودن پرطرفدارترین‌ها برای کاربران عادی'),
        ('share_enabled', 1, 'فعال بودن اشتراک‌گذاری برای کاربران عادی'),
        ('help_enabled', 0, 'فعال بودن راهنما برای کاربران عادی')
    ");
}// اضافه کردن به بخش توابع
function getBotSetting($key) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT `setting_value` FROM `bot_settings` WHERE `setting_key` = '{$key}'"
    ));
    
    return $result ? $result['setting_value'] : 1;
}

function updateBotSetting($key, $value) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "UPDATE `bot_settings` 
         SET `setting_value` = '{$value}', `updated_at` = CURRENT_TIMESTAMP 
         WHERE `setting_key` = '{$key}'"
    );
}

function getSettingsStatus() {
    $settings = [
        'search' => getBotSetting('search_enabled'),
        'popular' => getBotSetting('popular_enabled'),
        'share' => getBotSetting('share_enabled'),
        'help' => getBotSetting('help_enabled')
    ];
    
    return $settings;
}// منوی تنظیمات ربات
$settings_menu = json_encode(['keyboard' => [
    [['text' => "🔍 فعال/غیرفعال جستجو"], ['text' => "🔥 فعال/غیرفعال پرطرفدارترین‌ها"]],
    [['text' => "📤 فعال/غیرفعال اشتراک‌گذاری"]],
    [['text' => "📊 مشاهده وضعیت تنظیمات"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به بخش پنل ادمین
elseif ($text == "⚙️ تنظیمات ربات") {
    $settings = getSettingsStatus();
    
    $status_text = "⚙️ وضعیت تنظیمات ربات:\n\n";
    $status_text .= "🔍 جستجو: " . ($settings['search'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "🔥 پرطرفدارترین‌ها: " . ($settings['popular'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "📤 اشتراک‌گذاری: " . ($settings['share'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "📚 راهنما: " . ($settings['help'] ? "✅ فعال" : "❌ غیرفعال") . "\n\n";
    $status_text .= "برای تغییر هر مورد از دکمه‌های زیر استفاده کنید:";
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $status_text,
        'reply_to_message_id' => $message_id,
        'reply_markup' => $settings_menu
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'bot_settings' WHERE `id` = '{$from_id}' LIMIT 1");
}

// مدیریت فعال/غیرفعال کردن قابلیت‌ها
elseif ($text == "🔍 فعال/غیرفعال جستجو") {
    $current_status = getBotSetting('search_enabled');
    $new_status = $current_status ? 0 : 1;
    
    if (updateBotSetting('search_enabled', $new_status)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ قابلیت جستجو " . ($new_status ? "فعال" : "غیرفعال") . " شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $settings_menu
        ]);
    }
}

elseif ($text == "🔥 فعال/غیرفعال پرطرفدارترین‌ها") {
    $current_status = getBotSetting('popular_enabled');
    $new_status = $current_status ? 0 : 1;
    
    if (updateBotSetting('popular_enabled', $new_status)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ قابلیت پرطرفدارترین‌ها " . ($new_status ? "فعال" : "غیرفعال") . " شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $settings_menu
        ]);
    }
}

elseif ($text == "📤 فعال/غیرفعال اشتراک‌گذاری") {
    $current_status = getBotSetting('share_enabled');
    $new_status = $current_status ? 0 : 1;
    
    if (updateBotSetting('share_enabled', $new_status)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ قابلیت اشتراک‌گذاری " . ($new_status ? "فعال" : "غیرفعال") . " شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $settings_menu
        ]);
    }
}

elseif ($text == "📊 مشاهده وضعیت تنظیمات") {
    $settings = getSettingsStatus();
    
    $status_text = "📊 وضعیت فعلی تنظیمات:\n\n";
    $status_text .= "🔍 جستجو: " . ($settings['search'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "🔥 پرطرفدارترین‌ها: " . ($settings['popular'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "📤 اشتراک‌گذاری: " . ($settings['share'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    $status_text .= "📚 راهنما: " . ($settings['help'] ? "✅ فعال" : "❌ غیرفعال") . "\n";
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $status_text,
        'reply_to_message_id' => $message_id,
        'reply_markup' => $settings_menu
    ]);
}// اضافه کردن دکمه تنظیمات به منوی ادمین
if (isAdmin($from_id)) {
    $panel = json_encode(['keyboard' => [
        [['text' => "👤 امار ربات"]],
        [['text' => "👥 مدیریت ادمین‌ها"]],
        [['text' => "⏰ مدیریت حذف خودکار"], ['text' => "⚙️ تنظیمات ربات"]],
        [['text' => "📪 ارسال به همه"], ['text' => "📪 فوروارد به همه"]],
        [['text' => "🔙"]]
        ], 'resize_keyboard' => true
    ]);
}// تابع ایجاد منوی پویا برای کاربران عادی
function getUserMenu() {
    $settings = getSettingsStatus();
    $menu_items = [];
    
    // دکمه جستجو
    if ($settings['search']) {
        $menu_items[] = [['text' => "🔍 جستجوی فایل"]];
    }
    
    // دکمه پرطرفدارترین‌ها
    if ($settings['popular']) {
        if (count($menu_items) > 0 && count($menu_items[count($menu_items)-1]) < 2) {
            $menu_items[count($menu_items)-1][] = ['text' => "🔥 پرطرفدارترین‌ها"];
        } else {
            $menu_items[] = [['text' => "🔥 پرطرفدارترین‌ها"]];
        }
    }
    
    // دکمه فایل‌های قابل دانلود (همیشه فعال)
    if (count($menu_items) > 0 && count($menu_items[count($menu_items)-1]) < 2) {
        $menu_items[count($menu_items)-1][] = ['text' => "📥 فایل‌های قابل دانلود"];
    } else {
        $menu_items[] = [['text' => "📥 فایل‌های قابل دانلود"]];
    }
    
    // دکمه حساب کاربری (همیشه فعال)
    $menu_items[] = [['text' => "🎫 حساب کاربری"]];
    
    return json_encode(['keyboard' => $menu_items, 'resize_keyboard' => true]);
}

// استفاده از منوی پویا در قسمت start
if (preg_match('/^\/(start)$/i', $text) or $text == "🔙") {
    $admin_status = "";
    if (isAdmin($from_id)) {
        if ($from_id == 414816264) {
            $admin_status = "\n\n👑 شما ادمین اصلی این ربات هستید!";
        } else {
            $admin_status = "\n\n⚡ شما دسترسی ادمین دارید!";
        }
        
        $welcome_text = "👤 سلام <code>$first_name</code>\n🤖 به پنل مدیریت ربات خوش آمدید!{$admin_status}";
        $menu_to_use = $menu; // منوی اصلی ادمین
    } else {
        $welcome_text = "👤 سلام <code>$first_name</code>\n🤖 به کتابخانه فایل‌های ما خوش آمدید!\n\n📚 در این ربات می‌توانید فایل‌های مختلف را دانلود کنید.";
        $menu_to_use = getUserMenu(); // منوی پویا برای کاربران عادی
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $welcome_text . "\n\n🤖 @$usernamebot\n📢 @{$Config['channel']}",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html",
        'reply_markup' => $menu_to_use
    ]);
    
    if (!$user) {
        $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
    } else {
        $MySQLi->query("UPDATE `user` SET `step` = 'none', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
    }
}// غیرفعال کردن جستجو اگر غیرفعال باشد
elseif ($text == "🔍 جستجوی فایل") {
    if (!getBotSetting('search_enabled')) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ قابلیت جستجو در حال حاضر غیرفعال است!",
            'reply_to_message_id' => $message_id
        ]);
        exit();
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔍 جستجوی فایل\n\nلطفاً کلمه کلیدی مورد نظر را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'search_files' WHERE `id` = '{$from_id}' LIMIT 1");
}

// غیرفعال کردن پرطرفدارترین‌ها اگر غیرفعال باشد
elseif ($text == "🔥 پرطرفدارترین‌ها") {
    if (!getBotSetting('popular_enabled')) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ قابلیت پرطرفدارترین‌ها در حال حاضر غیرفعال است!",
            'reply_to_message_id' => $message_id
        ]);
        exit();
    }
    
    // بقیه کد پرطرفدارترین‌ها
    $popular_files = mysqli_query($MySQLi,
        "SELECT f.*, 
                COUNT(CASE WHEN i.interaction_type = 'like' THEN 1 END) as likes,
                COUNT(CASE WHEN i.interaction_type = 'view' THEN 1 END) as views
         FROM `dbfile` f
         LEFT JOIN `file_interactions` i ON f.code = i.file_code
         GROUP BY f.code
         ORDER BY likes DESC, views DESC
         LIMIT 10"
    );
    
    // ... بقیه کد
}

// غیرفعال کردن اشتراک‌گذاری اگر غیرفعال باشد
elseif (strpos($data, "share_") === 0) {
    if (!getBotSetting('share_enabled')) {
        WSBot('answercallbackquery', [
            'callback_query_id' => $membercall,
            'text' => "❌ قابلیت اشتراک‌گذاری غیرفعال است!",
            'show_alert' => true
        ]);
        exit();
    }
    
    $file_code = str_replace("share_", "", $data);
    $file_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT * FROM `dbfile` WHERE `code` = '{$file_code}'"
    ));
    
    // ... بقیه کد اشتراک‌گذاری
}// ❌ کامنت کردن یا حذف بخش راهنما
/*
elseif ($text == "📚 راهنما") {
    $help_text = "📚 راهنمای استفاده از ربات\n\n";
    // ... محتوای راهنما
}
*/// منوی اصلی ادمین - حذف راهنما
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' =>"🎫آپلود گروهی"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "👤 مدیریت"], ['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `batch_uploads`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `batch_uploads` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `batch_code` varchar(50) NOT NULL,
        `user_id` bigint(20) NOT NULL,
        `title` varchar(255) DEFAULT NULL,
        `description` text,
        `file_count` int(11) DEFAULT 0,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        `status` enum('uploading','completed','cancelled') DEFAULT 'uploading'
    )");
}// اضافه کردن به بخش توابع
function createBatchUpload($user_id, $title = null) {
    global $MySQLi;
    
    $batch_code = RandomString() . '_batch';
    $title = mysqli_real_escape_string($MySQLi, $title);
    
    mysqli_query($MySQLi, 
        "INSERT INTO `batch_uploads` 
        (`batch_code`, `user_id`, `title`) 
        VALUES ('{$batch_code}', '{$user_id}', '{$title}')"
    );
    
    return $batch_code;
}

function addFileToBatch($batch_code, $file_code, $file_type) {
    global $MySQLi;
    
    // آپدیت تعداد فایل‌ها
    mysqli_query($MySQLi,
        "UPDATE `batch_uploads` 
         SET `file_count` = `file_count` + 1 
         WHERE `batch_code` = '{$batch_code}'"
    );
    
    // ذخیره ارتباط فایل با بچ
    mysqli_query($MySQLi,
        "UPDATE `file_metadata` 
         SET `batch_code` = '{$batch_code}' 
         WHERE `file_code` = '{$file_code}'"
    );
}

function completeBatchUpload($batch_code) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "UPDATE `batch_uploads` 
         SET `status` = 'completed' 
         WHERE `batch_code` = '{$batch_code}'"
    );
}

function getBatchFiles($batch_code) {
    global $MySQLi;
    
    $files = mysqli_query($MySQLi,
        "SELECT fm.*, d.file_size, d.dl, d.file as file_type
         FROM `file_metadata` fm
         LEFT JOIN `dbfile` d ON fm.file_code = d.code
         WHERE fm.batch_code = '{$batch_code}'"
    );
    
    $result = [];
    while ($row = mysqli_fetch_assoc($files)) {
        $result[] = $row;
    }
    return $result;
}// منوی آپلود گروهی پیشرفته
$batch_upload_menu = json_encode(['keyboard' => [
    [['text' => "📦 شروع آپلود گروهی جدید"]],
    [['text' => "📝 افزودن عنوان به آپلود گروهی"]],
    [['text' => "✅ اتمام آپلود گروهی"]],
    [['text' => "❌ لغو آپلود گروهی"]],
    [['text' => "📋 مشاهده آپلودهای گروهی"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به منوی ادمین
elseif ($text == "📦 آپلود گروهی پیشرفته") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📦 سیستم آپلود گروهی پیشرفته\n\nبا این سیستم می‌توانید چندین فایل را یکجا آپلود کنید و برای هر فایل لینک جداگانه دریافت کنید.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $batch_upload_menu
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload' WHERE `id` = '{$from_id}' LIMIT 1");
}

// شروع آپلود گروهی جدید
elseif ($text == "📦 شروع آپلود گروهی جدید") {
    $batch_code = createBatchUpload($from_id);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ آپلود گروهی جدید شروع شد!\n\n🔸 کد آپلود: <code>{$batch_code}</code>\n📁 اکنون فایل‌های خود را ارسال کنید.\n⏰ پس از اتمام آپلود، از دکمه 'اتمام آپلود گروهی' استفاده کنید.",
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'HTML',
        'reply_markup' => $batch_upload_menu
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_uploading', `code` = '{$batch_code}' WHERE `id` = '{$from_id}' LIMIT 1");
}

// افزودن عنوان به آپلود گروهی
elseif ($text == "📝 افزودن عنوان به آپلود گروهی") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📝 افزودن عنوان به آپلود گروهی\n\nلطفاً عنوان مورد نظر را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_add_title' WHERE `id` = '{$from_id}' LIMIT 1");
}

// اتمام آپلود گروهی
elseif ($text == "✅ اتمام آپلود گروهی") {
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        completeBatchUpload($batch_data['batch_code']);
        $batch_files = getBatchFiles($batch_data['batch_code']);
        
        $message = "✅ آپلود گروهی با موفقیت تکمیل شد!\n\n";
        $message .= "📦 کد آپلود: <code>{$batch_data['batch_code']}</code>\n";
        $message .= "📁 تعداد فایل‌ها: " . count($batch_files) . "\n\n";
        $message .= "🔗 لینک‌های دانلود:\n";
        
        foreach ($batch_files as $index => $file) {
            $message .= ($index + 1) . ". 📥 /dl_{$file['file_code']}\n";
        }
        
        $message .= "\n🌐 لینک اشتراک‌گذاری مجموعه:\n";
        $message .= "https://t.me/" . $usernamebot . "?start=batch_{$batch_data['batch_code']}";
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id,
            'parse_mode' => 'HTML',
            'reply_markup' => $menu
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'none', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ هیچ آپلود گروهی فعالی پیدا نشد!",
            'reply_to_message_id' => $message_id
        ]);
    }
}// تغییر در بخش‌های آپلود برای پشتیبانی از حالت گروهی
function handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id) {
    global $MySQLi, $usernamebot;
    
    // بررسی تکراری نبودن فایل
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    if(!$file) {
        // ذخیره کپشن
        file_put_contents("files/$file_id", $caption ?: '');
        
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ذخیره متادیتا
        saveFileMetadata($code, $file_id, $from_id, $caption ?: '');
        
        // بررسی اگر در حال آپلود گروهی هستیم
        $user_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
            "SELECT * FROM `user` WHERE `id` = '{$from_id}'"
        ));
        
        $is_batch = false;
        if ($user_data && strpos($user_data['step'], 'batch_uploading') !== false) {
            addFileToBatch($user_data['code'], $code, $file_type);
            $is_batch = true;
        }
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        $caption_text = getAdvancedCaption([
            'code' => $code,
            'file' => $file_type,
            'file_size' => $file_size,
            'dl' => 1,
            'caption' => $caption
        ]);
        
        // ارسال فایل
        $method = 'send' . $file_type;
        $success_message = WSBot($method, [
            'chat_id' => $chat_id,
            $file_type => $file_id,
            'caption' => $caption_text . ($is_batch ? "\n\n📦 بخشی از آپلود گروهی" : ""),
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $interaction_keyboard
        ]);
        
        // ذخیره در دیتابیس اصلی
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', '{$file_type}', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        // آپدیت آمار کاربر
        if (!$user_data) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
        
        // ارسال پیام تأیید برای آپلود گروهی
        if ($is_batch) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ فایل به آپلود گروهی اضافه شد!\n\n📁 تعداد فایل‌های آپلود شده: " . 
                         getBatchFileCount($user_data['code']) . 
                         "\n🔸 برای اتمام آپلود از دکمه 'اتمام آپلود گروهی' استفاده کنید.",
                'reply_to_message_id' => $message_id
            ]);
        }
        
        return $code;
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
        return false;
    }
}

// تابع کمکی برای شمارش فایل‌های بچ
function getBatchFileCount($batch_code) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT `file_count` FROM `batch_uploads` WHERE `batch_code` = '{$batch_code}'"
    ));
    
    return $result ? $result['file_count'] : 0;
}// ساده‌سازی تمام بخش‌های آپلود با استفاده از تابع جدید
if(isset($message->document) && isAdmin($from_id)) {
    $file_id = $message->document->file_id;
    $file_size = $message->document->file_size;
    handleFileUpload('document', $file_id, $file_size, $message->caption, $from_id, $chat_id, $message_id);
}

if(isset($message->video) && isAdmin($from_id)) {
    $file_id = $message->video->file_id;
    $file_size = $message->video->file_size;
    handleFileUpload('video', $file_id, $file_size, $message->caption, $from_id, $chat_id, $message_id);
}

if(isset($message->photo) && isAdmin($from_id)) {
    $photo = $message->photo;
    $file_id = $photo[count($photo)-1]->file_id;
    $file_size = $photo[count($photo)-1]->file_size;
    handleFileUpload('photo', $file_id, $file_size, $message->caption, $from_id, $chat_id, $message_id);
}

// همینطور برای audio, voice, sticker// پردازش لینک‌های batch در start
elseif(strpos($text, "/start batch_") !== false) {
    $batch_code = str_replace("/start batch_", "", $text);
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` WHERE `batch_code` = '{$batch_code}' AND `status` = 'completed'"
    ));
    
    if ($batch_data) {
        $batch_files = getBatchFiles($batch_code);
        
        $message = "📦 مجموعه فایل‌ها\n\n";
        $message .= "📁 تعداد فایل‌ها: " . count($batch_files) . "\n";
        $message .= "📅 تاریخ آپلود: " . $batch_data['created_at'] . "\n\n";
        
        if ($batch_data['title']) {
            $message .= "🏷 عنوان: " . $batch_data['title'] . "\n\n";
        }
        
        $message .= "🔗 لینک‌های دانلود:\n";
        
        foreach ($batch_files as $index => $file) {
            $message .= ($index + 1) . ". 📥 /dl_{$file['file_code']}\n";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id,
            'parse_mode' => 'HTML'
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ مجموعه فایل یافت نشد یا حذف شده است!",
            'reply_to_message_id' => $message_id
        ]);
    }
}// اضافه کردن آپلود گروهی پیشرفته به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📥 فایل‌های قابل دانلود"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "👤 مدیریت"], ['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
}// اضافه کردن فیلد جدید به جدول متادیتا
if ($MySQLi->query("SELECT batch_code FROM `file_metadata`") == false) {
    mysqli_query($MySQLi, "ALTER TABLE `file_metadata` ADD `batch_code` varchar(50) DEFAULT NULL");
    mysqli_query($MySQLi, "ALTER TABLE `file_metadata` ADD INDEX `batch_code` (`batch_code`)");
}// اضافه کردن فیلدهای جدید به جدول آپلودهای گروهی
if ($MySQLi->query("SELECT allow_custom_captions FROM `batch_uploads`") == false) {
    mysqli_query($MySQLi, "ALTER TABLE `batch_uploads` 
        ADD `allow_custom_captions` tinyint(1) DEFAULT 1,
        ADD `default_caption_template` text");
}// توابع جدید برای کپشن‌نویسی
function getCaptionTemplate() {
    return "🎬 {title}\n📺 {episode}\n🕒 {duration}\n📹 {quality}\n🎞 {subtitle}\n\n📝 {description}";
}

function parseCaptionTemplate($template, $data) {
    $replacements = [
        '{title}' => $data['title'] ?? 'عنوان نامشخص',
        '{episode}' => $data['episode'] ?? 'قسمت نامشخص',
        '{duration}' => $data['duration'] ?? 'زمان نامشخص',
        '{quality}' => $data['quality'] ?? 'کیفیت نامشخص',
        '{subtitle}' => $data['subtitle'] ?? 'زیرنویس نامشخص',
        '{description}' => $data['description'] ?? 'توضیحاتی ثبت نشده'
    ];
    
    return str_replace(array_keys($replacements), array_values($replacements), $template);
}

function saveCustomCaption($file_id, $caption) {
    return file_put_contents("files/$file_id", $caption);
}// منوی آپلود گروهی پیشرفته با قابلیت کپشن
$advanced_batch_menu = json_encode(['keyboard' => [
    [['text' => "📦 شروع آپلود گروهی جدید"]],
    [['text' => "⚙️ تنظیمات کپشن"], ['text' => "📝 قالب کپشن پیش‌فرض"]],
    [['text' => "🎬 افزودن فایل با کپشن"]],
    [['text' => "📁 افزودن فایل سریع"]],
    [['text' => "✅ اتمام آپلود گروهی"]],
    [['text' => "❌ لغو آپلود گروهی"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// شروع آپلود گروهی با کپشن
elseif ($text == "🎬 افزودن فایل با کپشن") {
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "🎬 افزودن فایل با کپشن کامل\n\nلطفاً ابتدا فایل خود را ارسال کنید (ویدیو، عکس، فایل و...)\nسپس کپشن کامل را وارد نمایید.",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'waiting_for_file_with_caption' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ ابتدا یک آپلود گروهی جدید شروع کنید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

// پردازش فایل‌های ارسالی با کپشن
elseif ($user['step'] == 'waiting_for_file_with_caption' && 
       (isset($message->document) || isset($message->video) || isset($message->photo) || 
        isset($message->audio) || isset($message->voice) || isset($message->sticker))) {
    
    // ذخیره اطلاعات فایل موقت
    $file_type = '';
    $file_id = '';
    $file_size = 0;
    
    if (isset($message->document)) {
        $file_type = 'document';
        $file_id = $message->document->file_id;
        $file_size = $message->document->file_size;
    } elseif (isset($message->video)) {
        $file_type = 'video';
        $file_id = $message->video->file_id;
        $file_size = $message->video->file_size;
    } elseif (isset($message->photo)) {
        $file_type = 'photo';
        $photo = $message->photo;
        $file_id = $photo[count($photo)-1]->file_id;
        $file_size = $photo[count($photo)-1]->file_size;
    } elseif (isset($message->audio)) {
        $file_type = 'audio';
        $file_id = $message->audio->file_id;
        $file_size = $message->audio->file_size;
    } elseif (isset($message->voice)) {
        $file_type = 'voice';
        $file_id = $message->voice->file_id;
        $file_size = $message->voice->file_size;
    } elseif (isset($message->sticker)) {
        $file_type = 'sticker';
        $file_id = $message->sticker->file_id;
        $file_size = $message->sticker->file_size;
    }
    
    // ذخیره اطلاعات فایل در دیتابیس موقت
    $MySQLi->query("UPDATE `user` SET `step` = 'waiting_for_caption', `code` = '{$file_id}', `upload` = '{$file_size}' WHERE `id` = '{$from_id}' LIMIT 1");
    
    // ارسال راهنمای کپشن‌نویسی
    $caption_guide = "📝 لطفاً کپشن فایل را ارسال کنید:\n\n";
    $caption_guide .= "💡 می‌توانید از قالب زیر استفاده کنید:\n\n";
    $caption_guide .= "🎬 سریال وین\n";
    $caption_guide .= "📺 Wayne S01E08 - فصل 1 قسمت 8\n";
    $caption_guide .= "🕒 34:55\n";
    $caption_guide .= "📹 720p WEB-DL کیفیت\n";
    $caption_guide .= "🎞 زیرنویس چسبیده فارسی\n\n";
    $caption_guide .= "📝 توضیحات اضافی (اختیاری)";
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $caption_guide,
        'reply_to_message_id' => $message_id,
        'reply_markup' => json_encode(['keyboard' => [
            [['text' => "استفاده از قالب پیش‌فرض"]],
            [['text' => "لغو افزودن این فایل"]]
            ], 'resize_keyboard' => true])
    ]);
}

// پردازش کپشن ارسالی
elseif ($user['step'] == 'waiting_for_caption') {
    $file_id = $user['code'];
    $file_size = $user['upload'];
    
    if ($text == "استفاده از قالب پیش‌فرض") {
        $caption_data = [
            'title' => 'عنوان فایل',
            'episode' => 'قسمت نامشخص',
            'duration' => 'زمان نامشخص',
            'quality' => 'کیفیت نامشخص',
            'subtitle' => 'زیرنویس نامشخص',
            'description' => 'توضیحات فایل'
        ];
        $caption = parseCaptionTemplate(getCaptionTemplate(), $caption_data);
    } elseif ($text == "لغو افزودن این فایل") {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ افزودن فایل لغو شد.",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $advanced_batch_menu
        ]);
        $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload', `code` = '', `upload` = '0' WHERE `id` = '{$from_id}' LIMIT 1");
        exit();
    } else {
        $caption = $text;
    }
    
    // پردازش و ذخیره فایل با کپشن
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        // تعیین نوع فایل
        $file_type = 'document';
        if (isset($message->video)) $file_type = 'video';
        elseif (isset($message->photo)) $file_type = 'photo';
        elseif (isset($message->audio)) $file_type = 'audio';
        elseif (isset($message->voice)) $file_type = 'voice';
        elseif (isset($message->sticker)) $file_type = 'sticker';
        
        // پردازش فایل
        $file_code = handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id);
        
        if ($file_code) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ فایل با کپشن اختصاصی اضافه شد!\n\n📝 کپشن:\n{$caption}",
                'reply_to_message_id' => $message_id,
                'reply_markup' => $advanced_batch_menu
            ]);
        }
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload', `code` = '', `upload` = '0' WHERE `id` = '{$from_id}' LIMIT 1");
}// تنظیم قالب کپشن پیش‌فرض
elseif ($text == "📝 قالب کپشن پیش‌فرض") {
    $current_template = getCaptionTemplate();
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📝 قالب کپشن پیش‌فرض\n\nقالب فعلی:\n{$current_template}\n\nمتغیرهای قابل استفاده:\n{title} - عنوان\n{episode} - قسمت\n{duration} - مدت زمان\n{quality} - کیفیت\n{subtitle} - زیرنویس\n{description} - توضیحات\n\nلطفاً قالب جدید را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'set_caption_template' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'set_caption_template') {
    // ذخیره قالب در دیتابیس
    $template = mysqli_real_escape_string($MySQLi, $text);
    
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        mysqli_query($MySQLi,
            "UPDATE `batch_uploads` 
             SET `default_caption_template` = '{$template}' 
             WHERE `batch_code` = '{$batch_data['batch_code']}'"
        );
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ قالب کپشن پیش‌فرض ذخیره شد!",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $advanced_batch_menu
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload' WHERE `id` = '{$from_id}' LIMIT 1");
}function handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id) {
    global $MySQLi, $usernamebot;
    
    // بررسی تکراری نبودن فایل
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    if(!$file) {
        // ذخیره کپشن
        saveCustomCaption($file_id, $caption);
        
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ذخیره متادیتا
        saveFileMetadata($code, $file_id, $from_id, $caption);
        
        // بررسی اگر در حال آپلود گروهی هستیم
        $user_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
            "SELECT * FROM `user` WHERE `id` = '{$from_id}'"
        ));
        
        $is_batch = false;
        $batch_title = "";
        if ($user_data && strpos($user_data['step'], 'batch_uploading') !== false) {
            addFileToBatch($user_data['code'], $code, $file_type);
            $is_batch = true;
            
            // دریافت عنوان بچ
            $batch_info = mysqli_fetch_assoc(mysqli_query($MySQLi,
                "SELECT * FROM `batch_uploads` WHERE `batch_code` = '{$user_data['code']}'"
            ));
            $batch_title = $batch_info['title'] ?? '';
        }
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        // ایجاد کپشن نهایی
        $final_caption = $caption;
        if ($is_batch && $batch_title) {
            $final_caption = "📦 {$batch_title}\n\n" . $final_caption;
        }
        
        $final_caption .= "\n\n📥 تعداد دانلود: 1\n🔗 @" . $usernamebot;
        
        // ارسال فایل
        $method = 'send' . $file_type;
        $success_message = WSBot($method, [
            'chat_id' => $chat_id,
            $file_type => $file_id,
            'caption' => $final_caption,
            'reply_to_message_id' => $message_id,
            'parse_mode' => "HTML",
            'reply_markup' => $interaction_keyboard
        ]);
        
        // ذخیره در دیتابیس اصلی
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', '{$file_type}', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        // آپدیت آمار کاربر
        if (!$user_data) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
        
        return $code;
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
        return false;
    }
}// آپلود سریع بدون کپشن
elseif ($text == "📁 افزودن فایل سریع") {
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📁 افزودن فایل سریع\n\nلطفاً فایل خود را ارسال کنید.\nکپشن پیش‌فرض استفاده خواهد شد.",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'waiting_for_file_quick' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ ابتدا یک آپلود گروهی جدید شروع کنید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

// پردازش فایل‌های سریع
elseif ($user['step'] == 'waiting_for_file_quick' && 
       (isset($message->document) || isset($message->video) || isset($message->photo) || 
        isset($message->audio) || isset($message->voice) || isset($message->sticker))) {
    
    // استفاده از کپشن پیش‌فرض
    $caption_data = [
        'title' => 'فایل جدید',
        'episode' => '',
        'duration' => '',
        'quality' => '',
        'subtitle' => '',
        'description' => 'توضیحات فایل'
    ];
    
    $batch_info = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` WHERE `batch_code` = '{$user['code']}'"
    ));
    
    $caption = $batch_info['default_caption_template'] ? 
        parseCaptionTemplate($batch_info['default_caption_template'], $caption_data) : 
        parseCaptionTemplate(getCaptionTemplate(), $caption_data);
    
    // پردازش فایل
    $file_type = '';
    $file_id = '';
    $file_size = 0;
    
    if (isset($message->document)) {
        $file_type = 'document';
        $file_id = $message->document->file_id;
        $file_size = $message->document->file_size;
    } elseif (isset($message->video)) {
        $file_type = 'video';
        $file_id = $message->video->file_id;
        $file_size = $message->video->file_size;
    }
    // ... انواع دیگر فایل‌ها
    
    $file_code = handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id);
    
    if ($file_code) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ فایل به صورت سریع اضافه شد!",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $advanced_batch_menu
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload' WHERE `id` = '{$from_id}' LIMIT 1");
}// تغییر منوی اصلی آپلود گروهی
elseif ($text == "📦 آپلود گروهی پیشرفته") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📦 سیستم آپلود گروهی پیشرفته\n\n🏷 اکنون می‌توانید برای هر فایل کپشن اختصاصی بنویسید!\n\n📝 امکانات جدید:\n• کپشن‌نویسی حرفه‌ای برای هر فایل\n• قالب‌های قابل تنظیم\n• آپلود سریع با کپشن پیش‌فرض\n• مدیریت کامل محتوا",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $advanced_batch_menu
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload' WHERE `id` = '{$from_id}' LIMIT 1");
}// اضافه کردن فیلدهای جدید برای مدیریت مجموعه‌ها
if ($MySQLi->query("SELECT is_series FROM `batch_uploads`") == false) {
    mysqli_query($MySQLi, "ALTER TABLE `batch_uploads` 
        ADD `is_series` tinyint(1) DEFAULT 0,
        ADD `series_name` varchar(255) DEFAULT NULL,
        ADD `season_number` int(11) DEFAULT 1,
        ADD `total_episodes` int(11) DEFAULT 0,
        ADD `can_continue` tinyint(1) DEFAULT 1,
        ADD `parent_batch` varchar(50) DEFAULT NULL");
}// توابع جدید برای مدیریت مجموعه‌ها
function getSeriesBatches($series_name, $season_number = 1) {
    global $MySQLi;
    
    $series_name = mysqli_real_escape_string($MySQLi, $series_name);
    $batches = mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `series_name` = '{$series_name}' 
         AND `season_number` = '{$season_number}'
         AND `status` = 'completed'
         ORDER BY `created_at` ASC"
    );
    
    $result = [];
    while ($row = mysqli_fetch_assoc($batches)) {
        $result[] = $row;
    }
    return $result;
}

function continueBatchUpload($batch_code) {
    global $MySQLi;
    
    // تغییر وضعیت بچ به حالت آپلود مجدد
    mysqli_query($MySQLi,
        "UPDATE `batch_uploads` 
         SET `status` = 'uploading', `updated_at` = CURRENT_TIMESTAMP 
         WHERE `batch_code` = '{$batch_code}'"
    );
    
    return $batch_code;
}

function getSeriesEpisodes($series_name, $season_number = 1) {
    global $MySQLi;
    
    $series_name = mysqli_real_escape_string($MySQLi, $series_name);
    $episodes = mysqli_query($MySQLi,
        "SELECT fm.*, d.file_size, d.dl, d.file as file_type, b.batch_code
         FROM `file_metadata` fm
         LEFT JOIN `dbfile` d ON fm.file_code = d.code
         LEFT JOIN `batch_uploads` b ON fm.batch_code = b.batch_code
         WHERE b.series_name = '{$series_name}' 
         AND b.season_number = '{$season_number}'
         AND b.status = 'completed'
         ORDER BY fm.created_at ASC"
    );
    
    $result = [];
    while ($row = mysqli_fetch_assoc($episodes)) {
        $result[] = $row;
    }
    return $result;
}// منوی مدیریت سریال‌ها و مجموعه‌ها
$series_management = json_encode(['keyboard' => [
    [['text' => "📺 شروع سریال جدید"], ['text' => "➕ ادامه سریال موجود"]],
    [['text' => "📋 لیست سریال‌ها"], ['text' => "🎬 مدیریت قسمت‌ها"]],
    [['text' => "🔍 جستجوی سریال"], ['text' => "📊 آمار سریال"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// شروع یک سریال جدید
elseif ($text == "📺 شروع سریال جدید") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📺 شروع سریال جدید\n\nلطفاً اطلاعات سریال را وارد کنید:\n\n1. نام سریال\n2. شماره فصل (اختیاری - پیش‌فرض: 1)\n3. تعداد قسمت‌ها (اختیاری)\n\n📝 مثال:\nسریال وین\nفصل 1\n12 قسمت",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'new_series_info' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'new_series_info') {
    // پردازش اطلاعات سریال
    $lines = explode("\n", $text);
    $series_name = trim($lines[0]);
    $season = 1;
    $total_episodes = 0;
    
    foreach ($lines as $line) {
        if (strpos($line, 'فصل') !== false) {
            preg_match('/\d+/', $line, $matches);
            if ($matches) $season = intval($matches[0]);
        }
        if (strpos($line, 'قسمت') !== false) {
            preg_match('/\d+/', $line, $matches);
            if ($matches) $total_episodes = intval($matches[0]);
        }
    }
    
    $batch_code = createBatchUpload($from_id, $series_name);
    
    // ذخیره اطلاعات سریال
    mysqli_query($MySQLi,
        "UPDATE `batch_uploads` 
         SET `is_series` = 1, `series_name` = '{$series_name}', 
             `season_number` = '{$season}', `total_episodes` = '{$total_episodes}'
         WHERE `batch_code` = '{$batch_code}'"
    );
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ سریال جدید ایجاد شد!\n\n📺 نام: {$series_name}\n🎬 فصل: {$season}\n📁 تعداد قسمت‌ها: {$total_episodes}\n🔸 کد سریال: <code>{$batch_code}</code>\n\nاکنون می‌توانید قسمت‌ها را آپلود کنید.",
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'HTML',
        'reply_markup' => $advanced_batch_menu
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload', `code` = '{$batch_code}' WHERE `id` = '{$from_id}' LIMIT 1");
}// ادامه سریال موجود
elseif ($text == "➕ ادامه سریال موجود") {
    $series_list = mysqli_query($MySQLi,
        "SELECT DISTINCT `series_name`, `season_number` 
         FROM `batch_uploads` 
         WHERE `is_series` = 1 AND `user_id` = '{$from_id}'
         ORDER BY `series_name`, `season_number`"
    );
    
    if (mysqli_num_rows($series_list) > 0) {
        $message = "📺 انتخاب سریال برای ادامه\n\n";
        $keyboard = ['inline_keyboard' => []];
        
        while ($series = mysqli_fetch_assoc($series_list)) {
            $episode_count = mysqli_fetch_assoc(mysqli_query($MySQLi,
                "SELECT COUNT(*) as count FROM `file_metadata` fm
                 LEFT JOIN `batch_uploads` b ON fm.batch_code = b.batch_code
                 WHERE b.series_name = '{$series['series_name']}' 
                 AND b.season_number = '{$series['season_number']}'"
            ));
            
            $keyboard['inline_keyboard'][] = [
                [
                    'text' => "{$series['series_name']} - فصل {$series['season_number']} ({$episode_count['count']} قسمت)",
                    'callback_data' => "continue_series_{$series['series_name']}_{$series['season_number']}"
                ]
            ];
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id,
            'reply_markup' => json_encode($keyboard)
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ هیچ سریالی برای ادامه وجود ندارد!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

// پردازش انتخاب سریال برای ادامه
elseif (strpos($data, "continue_series_") === 0) {
    $series_info = str_replace("continue_series_", "", $data);
    list($series_name, $season) = explode("_", $series_info);
    
    // ایجاد بچ جدید برای ادامه
    $new_batch_code = createBatchUpload($fromid, $series_name . " - ادامه");
    
    // تنظیم اطلاعات سریال
    mysqli_query($MySQLi,
        "UPDATE `batch_uploads` 
         SET `is_series` = 1, `series_name` = '{$series_name}', 
             `season_number` = '{$season}', `parent_batch` = '{$series_info}'
         WHERE `batch_code` = '{$new_batch_code}'"
    );
    
    WSBot('editmessagetext', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'text' => "✅ سریال انتخاب شد!\n\n📺 نام: {$series_name}\n🎬 فصل: {$season}\n🔸 کد آپلود جدید: <code>{$new_batch_code}</code>\n\nاکنون می‌توانید قسمت‌های جدید را آپلود کنید.",
        'parse_mode' => 'HTML'
    ]);
    
    // ارسال منوی آپلود
    WSBot('sendmessage', [
        'chat_id' => $chatid,
        'text' => "📦 سیستم آپلود گروهی - ادامه سریال",
        'reply_markup' => $advanced_batch_menu
    ]);
    
    $MySQLi->query("UPDATE `user` SET `step` = 'batch_upload', `code` = '{$new_batch_code}' WHERE `id` = '{$fromid}' LIMIT 1");
}// تابع جدید برای نمایش همه قسمت‌های یک سریال
function getSeriesDownloadLinks($series_name, $season_number = 1) {
    $episodes = getSeriesEpisodes($series_name, $season_number);
    
    if (empty($episodes)) {
        return "❌ هیچ قسمتی برای این سریال یافت نشد!";
    }
    
    $message = "📺 سریال: {$series_name} - فصل {$season_number}\n\n";
    $message .= "📁 تعداد قسمت‌ها: " . count($episodes) . "\n\n";
    $message .= "🔗 لینک‌های دانلود:\n\n";
    
    foreach ($episodes as $index => $episode) {
        $episode_number = $index + 1;
        $message .= "{$episode_number}. 📥 /dl_{$episode['file_code']}\n";
        
        // نمایش اطلاعات مختصر هر قسمت
        if (!empty($episode['custom_title'])) {
            $message .= "   🎬 " . substr($episode['custom_title'], 0, 30) . "...\n";
        }
        $message .= "   👁 " . formatNumber($episode['dl']) . " دانلود\n";
        $message .= "   ➖➖➖➖➖\n";
    }
    
    $message .= "\n🌐 لینک اشتراک‌گذاری کل سریال:\n";
    $message .= "https://t.me/" . $GLOBALS['usernamebot'] . "?start=series_{$series_name}_{$season_number}";
    
    return $message;
}

// پردازش لینک‌های سریال
elseif(strpos($text, "/start series_") !== false) {
    $series_info = str_replace("/start series_", "", $text);
    list($series_name, $season) = explode("_", $series_info);
    
    $download_links = getSeriesDownloadLinks($series_name, $season);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $download_links,
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'HTML'
    ]);
}// بهبود تابع اتمام آپلود گروهی
elseif ($text == "✅ اتمام آپلود گروهی") {
    $batch_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `batch_uploads` 
         WHERE `user_id` = '{$from_id}' AND `status` = 'uploading' 
         ORDER BY `created_at` DESC LIMIT 1"
    ));
    
    if ($batch_data) {
        completeBatchUpload($batch_data['batch_code']);
        $batch_files = getBatchFiles($batch_data['batch_code']);
        
        $message = "✅ آپلود گروهی با موفقیت تکمیل شد!\n\n";
        
        if ($batch_data['is_series']) {
            $all_episodes = getSeriesEpisodes($batch_data['series_name'], $batch_data['season_number']);
            $message .= "📺 سریال: {$batch_data['series_name']}\n";
            $message .= "🎬 فصل: {$batch_data['season_number']}\n";
            $message .= "📁 تعداد کل قسمت‌ها: " . count($all_episodes) . "\n\n";
            $message .= "🔗 لینک اشتراک‌گذاری کل سریال:\n";
            $message .= "https://t.me/" . $usernamebot . "?start=series_{$batch_data['series_name']}_{$batch_data['season_number']}";
        } else {
            $message .= "📦 کد آپلود: <code>{$batch_data['batch_code']}</code>\n";
            $message .= "📁 تعداد فایل‌ها: " . count($batch_files) . "\n\n";
            $message .= "🔗 لینک‌های دانلود:\n";
            
            foreach ($batch_files as $index => $file) {
                $message .= ($index + 1) . ". 📥 /dl_{$file['file_code']}\n";
            }
            
            $message .= "\n🌐 لینک اشتراک‌گذاری مجموعه:\n";
            $message .= "https://t.me/" . $usernamebot . "?start=batch_{$batch_data['batch_code']}";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id,
            'parse_mode' => 'HTML',
            'reply_markup' => $menu
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'none', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
    }
}// مشاهده لیست سریال‌ها
elseif ($text == "📋 لیست سریال‌ها") {
    $series_list = mysqli_query($MySQLi,
        "SELECT `series_name`, `season_number`, COUNT(fm.file_code) as episode_count
         FROM `batch_uploads` b
         LEFT JOIN `file_metadata` fm ON b.batch_code = fm.batch_code
         WHERE b.is_series = 1 AND b.user_id = '{$from_id}' AND b.status = 'completed'
         GROUP BY b.series_name, b.season_number
         ORDER BY b.series_name, b.season_number"
    );
    
    if (mysqli_num_rows($series_list) > 0) {
        $message = "📋 لیست سریال‌های شما:\n\n";
        
        while ($series = mysqli_fetch_assoc($series_list)) {
            $message .= "📺 {$series['series_name']} - فصل {$series['season_number']}\n";
            $message .= "📁 تعداد قسمت‌ها: {$series['episode_count']}\n";
            $message .= "🔗 /series_{$series['series_name']}_{$series['season_number']}\n";
            $message .= "➖➖➖➖➖➖➖\n";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📭 شما هنوز هیچ سریالی ایجاد نکرده‌اید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

// دستور سریع برای نمایش سریال
elseif (strpos($text, "/series_") === 0) {
    $series_info = str_replace("/series_", "", $text);
    list($series_name, $season) = explode("_", $series_info);
    
    $download_links = getSeriesDownloadLinks($series_name, $season);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $download_links,
        'reply_to_message_id' => $message_id,
        'parse_mode' => 'HTML'
    ]);
}// اضافه کردن منوی سریال‌ها به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "👤 مدیریت"], ['text' => "🗂 کد پیگیری فایل"]]
        ], 'resize_keyboard' => true
    ]);
}

// اضافه کردن دستور مدیریت سریال‌ها
elseif ($text == "📺 مدیریت سریال‌ها") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📺 سیستم مدیریت سریال‌ها و مجموعه‌ها\n\nبا این سیستم می‌توانید سریال‌ها را به صورت منظم مدیریت کرده و قسمت‌های جدید را به مجموعه موجود اضافه کنید.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $series_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'series_management' WHERE `id` = '{$from_id}' LIMIT 1");
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `video_covers`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `video_covers` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `video_file_code` varchar(50) NOT NULL UNIQUE,
        `cover_file_id` varchar(200) NOT NULL,
        `cover_caption` text CHARACTER SET utf8mb4,
        `user_id` bigint(20) NOT NULL,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP,
        INDEX `video_file_code` (`video_file_code`),
        INDEX `user_id` (`user_id`)
    )");
}// اضافه کردن به بخش توابع
function setVideoCover($video_file_code, $cover_file_id, $user_id, $caption = '') {
    global $MySQLi;
    
    $caption = mysqli_real_escape_string($MySQLi, $caption);
    
    return mysqli_query($MySQLi, 
        "INSERT INTO `video_covers` 
        (`video_file_code`, `cover_file_id`, `user_id`, `cover_caption`) 
        VALUES ('{$video_file_code}', '{$cover_file_id}', '{$user_id}', '{$caption}')
        ON DUPLICATE KEY UPDATE 
        `cover_file_id` = '{$cover_file_id}',
        `cover_caption` = '{$caption}',
        `created_at` = CURRENT_TIMESTAMP"
    );
}

function getVideoCover($video_file_code) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `video_covers` WHERE `video_file_code` = '{$video_file_code}'"
    ));
    
    return $result ?: null;
}

function deleteVideoCover($video_file_code) {
    global $MySQLi;
    
    return mysqli_query($MySQLi,
        "DELETE FROM `video_covers` WHERE `video_file_code` = '{$video_file_code}'"
    );
}

// تابع ایجاد پیش‌نمایش ویدیو با کاور
function sendVideoWithCustomCover($chat_id, $video_file_id, $caption, $cover_file_id = null, $reply_markup = null) {
    $params = [
        'chat_id' => $chat_id,
        'video' => $video_file_id,
        'caption' => $caption,
        'parse_mode' => 'HTML'
    ];
    
    // اگر کاور وجود دارد، اضافه کن
    if ($cover_file_id) {
        $params['thumb'] = $cover_file_id;
    }
    
    if ($reply_markup) {
        $params['reply_markup'] = $reply_markup;
    }
    
    return WSBot('sendvideo', $params);
}// منوی مدیریت کاور ویدیوها
$cover_management = json_encode(['keyboard' => [
    [['text' => "🖼 افزودن کاور به ویدیو"]],
    [['text' => "📝 ویرایش کاور موجود"]],
    [['text' => "🗑 حذف کاور"]],
    [['text' => "👀 مشاهده ویدیوهای دارای کاور"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به منوی مدیریت فایل‌ها
elseif ($text == "🖼 مدیریت کاور ویدیوها") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🖼 سیستم مدیریت کاور ویدیوها\n\nبا این سیستم می‌توانید برای ویدیوهای خود کاور دلخواه تنظیم کنید تا جذابیت بصری بیشتری داشته باشند.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $cover_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'cover_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

// افزودن کاور به ویدیو
elseif ($text == "🖼 افزودن کاور به ویدیو") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🖼 افزودن کاور به ویدیو\n\nلطفاً مراحل زیر را دنبال کنید:\n\n1. ابتدا شناسه ویدیو را ارسال کنید\n2. سپس تصویر کاور را ارسال کنید\n3. در نهایت کپشن کاور را وارد نمایید\n\n🔸 شناسه ویدیو معمولاً کدی است مانند: ABC123DEF",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'add_cover_video_code' WHERE `id` = '{$from_id}' LIMIT 1");
}

// پردازش مراحل افزودن کاور
elseif ($user['step'] == 'add_cover_video_code') {
    $video_code = $text;
    $video_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `dbfile` WHERE `code` = '{$video_code}' AND `user_id` = '{$from_id}' AND `file` = 'video'"
    ));
    
    if ($video_data) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✅ ویدیو پیدا شد!\n\n🎬 شناسه: {$video_code}\n📁 عنوان: " . ($video_data['file'] ?? 'ویدیو') . "\n\nلطفاً تصویر کاور را ارسال کنید:",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'add_cover_image', `code` = '{$video_code}' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ ویدیویی با این شناسه پیدا نشد! لطفاً شناسه صحیح را وارد کنید:",
            'reply_to_message_id' => $message_id
        ]);
    }
}

elseif ($user['step'] == 'add_cover_image' && isset($message->photo)) {
    $video_code = $user['code'];
    $photo = $message->photo;
    $cover_file_id = $photo[count($photo)-1]->file_id;
    
    // ذخیره موقت تصویر کاور
    $MySQLi->query("UPDATE `user` SET `step` = 'add_cover_caption', `upload` = '{$cover_file_id}' WHERE `id` = '{$from_id}' LIMIT 1");
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✅ تصویر کاور دریافت شد!\n\nلطفاً کپشن کاور را وارد کنید (اختیاری):\n\n💡 می‌توانید توضیحاتی درباره کاور بنویسید یا از Enter بگذرید.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => json_encode(['keyboard' => [
            [['text' => "رد کردن کپشن"]],
            [['text' => "🔙 برگشت"]]
            ], 'resize_keyboard' => true])
    ]);
}

elseif ($user['step'] == 'add_cover_caption') {
    $video_code = $user['code'];
    $cover_file_id = $user['upload'];
    $cover_caption = ($text == "رد کردن کپشن") ? '' : $text;
    
    if (setVideoCover($video_code, $cover_file_id, $from_id, $cover_caption)) {
        // نمایش نمونه
        $video_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT * FROM `dbfile` WHERE `code` = '{$video_code}'"
        ));
        
        $cover_data = getVideoCover($video_code);
        
        // ارسال کاور به عنوان پیش‌نمایش
        WSBot('sendphoto', [
            'chat_id' => $chat_id,
            'photo' => $cover_file_id,
            'caption' => "✅ کاور با موفقیت تنظیم شد!\n\n🎬 ویدیو: {$video_code}\n🖼 کاور: فعال\n📝 توضیحات: " . ($cover_caption ?: 'ندارد'),
            'reply_to_message_id' => $message_id
        ]);
        
        // ارسال ویدیو با کاور جدید
        $interaction_keyboard = getInteractionKeyboard($video_code, $from_id);
        $video_caption = getAdvancedCaption($video_data);
        
        sendVideoWithCustomCover($chat_id, $video_data['file_id'], $video_caption, $cover_file_id, $interaction_keyboard);
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "🎉 ویدیو با کاور جدید آماده است!\n\nاکنون کاربران ویدیو را با این کاور مشاهده خواهند کرد.",
            'reply_to_message_id' => $message_id,
            'reply_markup' => $cover_management
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ خطا در تنظیم کاور!",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'cover_management', `code` = '', `upload` = '0' WHERE `id` = '{$from_id}' LIMIT 1");
}// تغییر در تابع handleFileUpload برای ویدیوها
function handleFileUpload($file_type, $file_id, $file_size, $caption, $from_id, $chat_id, $message_id) {
    global $MySQLi, $usernamebot;
    
    // بررسی تکراری نبودن فایل
    $file = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `file_id` = '{$file_id}' LIMIT 1"));
    
    if(!$file) {
        // ذخیره کپشن
        saveCustomCaption($file_id, $caption);
        
        $code = RandomString();
        $size = convert($file_size);
        $time = date('h:i:s');
        $date = date('Y/m/d');
        
        // ذخیره متادیتا
        saveFileMetadata($code, $file_id, $from_id, $caption);
        
        // بررسی اگر در حال آپلود گروهی هستیم
        $user_data = mysqli_fetch_assoc(mysqli_query($MySQLi, 
            "SELECT * FROM `user` WHERE `id` = '{$from_id}'"
        ));
        
        $is_batch = false;
        $batch_title = "";
        if ($user_data && strpos($user_data['step'], 'batch_uploading') !== false) {
            addFileToBatch($user_data['code'], $code, $file_type);
            $is_batch = true;
            
            $batch_info = mysqli_fetch_assoc(mysqli_query($MySQLi,
                "SELECT * FROM `batch_uploads` WHERE `batch_code` = '{$user_data['code']}'"
            ));
            $batch_title = $batch_info['title'] ?? '';
        }
        
        // ثبت تعامل
        recordInteraction($code, $from_id, 'view');
        $interaction_keyboard = getInteractionKeyboard($code, $from_id);
        
        // ایجاد کپشن نهایی
        $final_caption = $caption;
        if ($is_batch && $batch_title) {
            $final_caption = "📦 {$batch_title}\n\n" . $final_caption;
        }
        
        $final_caption .= "\n\n📥 تعداد دانلود: 1\n🔗 @" . $usernamebot;
        
        // ارسال فایل با توجه به نوع
        if ($file_type == 'video') {
            // بررسی آیا کاور دارد؟
            $cover_data = null;
            // اگر کاربر قبلاً کاور تنظیم کرده باشد، می‌تواند از اینجا استفاده کند
            
            $success_message = sendVideoWithCustomCover($chat_id, $file_id, $final_caption, null, $interaction_keyboard);
        } else {
            // برای سایر انواع فایل
            $method = 'send' . $file_type;
            $success_message = WSBot($method, [
                'chat_id' => $chat_id,
                $file_type => $file_id,
                'caption' => $final_caption,
                'reply_to_message_id' => $message_id,
                'parse_mode' => "HTML",
                'reply_markup' => $interaction_keyboard
            ]);
        }
        
        // ذخیره در دیتابیس اصلی
        $MySQLi->query("INSERT INTO `dbfile` (`code`, `file_id`, `file`, `password`, `file_size`, `user_id`, `date`, `time`, `dl`) VALUES ('{$code}', '{$file_id}', '{$file_type}', '', '{$file_size}', '{$from_id}', '{$date}', '{$time}', '1')");
        
        // آپدیت آمار کاربر
        if (!$user_data) {
            $MySQLi->query("INSERT INTO `user` (`id`, `step`, `upload`, `code`) VALUES ('{$from_id}', 'none', '0', '')");
        } else {
            $MySQLi->query("UPDATE `user` SET `upload` = `upload` + 1 WHERE `id` = '{$from_id}' LIMIT 1");
        }
        
        return $code;
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "▪️ خطا , این فایل قبلا در دیتابیس اپلود شده است ... !",
            'reply_to_message_id' => $message_id
        ]);
        return false;
    }
}// بهبود بخش نمایش ویدیو هنگام دانلود
elseif(strpos($text, "/start _") !== false) {
    $idFile = str_replace("/start _", null, $text);
    $dataFile = mysqli_fetch_assoc(mysqli_query($MySQLi, "SELECT * FROM `dbfile` WHERE `code` = '{$idFile}' LIMIT 1"));
    
    // ... کدهای موجود
    
    if ($dataFile['file'] == 'video') {
        // بررسی آیا کاور دارد؟
        $cover_data = getVideoCover($idFile);
        $cover_file_id = $cover_data ? $cover_data['cover_file_id'] : null;
        
        $dl = number_format($dataFile['dl']);
        $cap = file_get_contents("files/{$dataFile['file_id']}");
        $final_caption = $cap . PHP_EOL . "📥 تعداد دانلود ها : <code>{$dl}</code>\n🤖 @$usernamebot";
        
        // ارسال ویدیو با کاور دلخواه
        sendVideoWithCustomCover($chat_id, $dataFile['file_id'], $final_caption, $cover_file_id, $menu);
    } else {
        // برای سایر انواع فایل
        $method = $dataFile['file'];
        $cap = file_get_contents("files/{$dataFile['file_id']}");
        WSBot('send'.$dataFile['file'], [
            'chat_id' => $chat_id,
            "$method" => $dataFile['file_id'],
            'caption' => $cap . PHP_EOL . "📥 تعداد دانلود ها : <code>{$dl}</code>\n🤖 @$usernamebot",
            'reply_to_message_id' => $message_id,
            'parse_mode' => "html",
            'reply_markup' => $menu
        ]);
    }
    
    // ... بقیه کد
}// دستور ریپلای برای افزودن کاور سریع
elseif (strpos($text, '/setcover') === 0 && isset($message->reply_to_message)) {
    $reply_message = $message->reply_to_message;
    
    // بررسی اینکه پیام ریپلای شده حاوی ویدیو است
    if (isset($reply_message->video)) {
        $video_file_id = $reply_message->video->file_id;
        
        // پیدا کردن کد ویدیو
        $video_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT * FROM `dbfile` WHERE `file_id` = '{$video_file_id}' AND `user_id` = '{$from_id}'"
        ));
        
        if ($video_data) {
            // بررسی آیا پیام فعلی حاوی عکس است
            if (isset($message->photo)) {
                $photo = $message->photo;
                $cover_file_id = $photo[count($photo)-1]->file_id;
                
                $cover_caption = str_replace('/setcover', '', $text);
                $cover_caption = trim($cover_caption);
                
                if (setVideoCover($video_data['code'], $cover_file_id, $from_id, $cover_caption)) {
                    WSBot('sendmessage', [
                        'chat_id' => $chat_id,
                        'text' => "✅ کاور برای ویدیو تنظیم شد!",
                        'reply_to_message_id' => $message_id
                    ]);
                    
                    // نمایش پیش‌نمایش
                    WSBot('sendphoto', [
                        'chat_id' => $chat_id,
                        'photo' => $cover_file_id,
                        'caption' => "🖼 کاور جدید ویدیو\n\n" . ($cover_caption ?: 'کاور دلخواه'),
                        'reply_to_message_id' => $message_id
                    ]);
                }
            } else {
                WSBot('sendmessage', [
                    'chat_id' => $chat_id,
                    'text' => "❌ لطفاً یک تصویر به عنوان کاور ارسال کنید!",
                    'reply_to_message_id' => $message_id
                ]);
            }
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ ویدیو پیدا نشد یا شما دسترسی ندارید!",
                'reply_to_message_id' => $message_id
            ]);
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ لطفاً به یک ویدیو ریپلای کنید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}// مشاهده ویدیوهای دارای کاور
elseif ($text == "👀 مشاهده ویدیوهای دارای کاور") {
    $videos_with_covers = mysqli_query($MySQLi,
        "SELECT vc.*, d.code as video_code, d.file_size, d.dl, fm.caption as video_caption
         FROM `video_covers` vc
         LEFT JOIN `dbfile` d ON vc.video_file_code = d.code
         LEFT JOIN `file_metadata` fm ON vc.video_file_code = fm.file_code
         WHERE vc.user_id = '{$from_id}'
         ORDER BY vc.created_at DESC"
    );
    
    if (mysqli_num_rows($videos_with_covers) > 0) {
        $message = "🖼 ویدیوهای دارای کاور:\n\n";
        
        while ($video = mysqli_fetch_assoc($videos_with_covers)) {
            $message .= "🎬 کد ویدیو: {$video['video_code']}\n";
            $message .= "📊 دانلود: " . formatNumber($video['dl']) . "\n";
            $message .= "🕒 تاریخ: " . $video['created_at'] . "\n";
            $message .= "📝 " . ($video['cover_caption'] ?: 'بدون توضیح') . "\n";
            $message .= "🔗 /dl_{$video['video_code']}\n";
            $message .= "➖➖➖➖➖➖➖\n";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📭 هیچ ویدیویی با کاور دلخواه ندارید!",
            'reply_to_message_id' => $message_id
        ]);
    }
}// اضافه کردن مدیریت کاور به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🖼 مدیریت کاور ویدیوها"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🔐 تنظیم پسورد"]],
        [['text' => "🗑 حذف فایل"], ['text' => "🗂 کد پیگیری فایل"]],
        [['text' => "👤 مدیریت"]]
        ], 'resize_keyboard' => true
    ]);
}// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `bot_texts`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `bot_texts` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `text_key` varchar(100) NOT NULL UNIQUE,
        `text_value` text CHARACTER SET utf8mb4,
        `description` varchar(255) DEFAULT NULL,
        `category` varchar(50) DEFAULT 'general',
        `updated_at` timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        `updated_by` bigint(20) DEFAULT NULL
    )");

    // متون پیش‌فرض
    $default_texts = [
        // متون عمومی
        ['welcome_message', '👤 سلام {first_name}\n🤖 به ربات ما خوش آمدید!', 'پیام خوشامدگویی در استارت', 'general'],
        ['help_message', '📚 راهنمای استفاده از ربات\n\nبرای شروع از منوی زیر استفاده کنید.', 'پیام راهنما', 'general'],
        ['upload_success', '✅ فایل شما با موفقیت آپلود شد!\nکد فایل: {file_code}', 'پیام موفقیت آپلود', 'upload'],
        ['file_not_found', '❌ فایل مورد نظر یافت نشد.', 'پیام خطای عدم یافتن فایل', 'errors'],
        ['admin_only', '❌ این دستور فقط برای ادمین‌ها قابل استفاده است.', 'پیام دسترسی ممنوع', 'errors'],
        ['need_join_channel', '⚠️ برای استفاده از ربات باید در کانال‌های ما عضو شوید.', 'پیام نیاز به عضویت در کانال', 'general'],
        
        // متون آپلود گروهی
        ['batch_start', '📦 آپلود گروهی شروع شد!\nکد: {batch_code}', 'پیام شروع آپلود گروهی', 'batch'],
        ['batch_complete', '✅ آپلود گروهی با موفقیت تکمیل شد!\nتعداد فایل‌ها: {file_count}', 'پیام اتمام آپلود گروهی', 'batch'],
        
        // متون مدیریت
        ['settings_updated', '✅ تنظیمات با موفقیت به‌روزرسانی شد.', 'پیام به‌روزرسانی تنظیمات', 'admin'],
        ['text_updated', '✅ متن با موفقیت ویرایش شد.', 'پیام ویرایش متن', 'admin']
    ];

    foreach ($default_texts as $text) {
        $key = $text[0];
        $value = mysqli_real_escape_string($MySQLi, $text[1]);
        $desc = mysqli_real_escape_string($MySQLi, $text[2]);
        $category = $text[3];
        mysqli_query($MySQLi, 
            "INSERT INTO `bot_texts` (`text_key`, `text_value`, `description`, `category`) 
             VALUES ('$key', '$value', '$desc', '$category')"
        );
    }
}// اضافه کردن به بخش توابع
function getBotText($key, $replacements = []) {
    global $MySQLi;
    
    $result = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT `text_value` FROM `bot_texts` WHERE `text_key` = '{$key}'"
    ));
    
    $text = $result ? $result['text_value'] : "متن '{$key}' یافت نشد.";
    
    // جایگزینی مقادیر داینامیک
    foreach ($replacements as $placeholder => $value) {
        $text = str_replace('{' . $placeholder . '}', $value, $text);
    }
    
    // تبدیل \n به خط جدید
    $text = str_replace('\n', "\n", $text);
    
    return $text;
}

function updateBotText($key, $value, $user_id = null) {
    global $MySQLi;
    
    $value = mysqli_real_escape_string($MySQLi, $value);
    $user_sql = $user_id ? ", `updated_by` = '{$user_id}'" : "";
    
    return mysqli_query($MySQLi,
        "UPDATE `bot_texts` 
         SET `text_value` = '{$value}', `updated_at` = CURRENT_TIMESTAMP {$user_sql}
         WHERE `text_key` = '{$key}'"
    );
}

function getAllBotTexts($category = null) {
    global $MySQLi;
    
    $where = $category ? "WHERE `category` = '{$category}'" : "";
    $texts = mysqli_query($MySQLi, 
        "SELECT * FROM `bot_texts` {$where} ORDER BY `category`, `text_key`"
    );
    
    $result = [];
    while ($row = mysqli_fetch_assoc($texts)) {
        $result[] = $row;
    }
    
    return $result;
}

function getTextCategories() {
    global $MySQLi;
    
    $categories = mysqli_query($MySQLi, 
        "SELECT DISTINCT `category` FROM `bot_texts` ORDER BY `category`"
    );
    
    $result = [];
    while ($row = mysqli_fetch_assoc($categories)) {
        $result[] = $row['category'];
    }
    
    return $result;
}// منوی مدیریت متون ربات
$text_management = json_encode(['keyboard' => [
    [['text' => "📋 مشاهده تمام متون"], ['text' => "🔍 جستجو در متون"]],
    [['text' => "📂 متون بر اساس دسته"], ['text' => "✏️ ویرایش متن"]],
    [['text' => "🆕 افزودن متن جدید"], ['text' => "🗑 حذف متن"]],
    [['text' => "📤 Export متون"], ['text' => "📥 Import متون"]],
    [['text' => "🔄 بازگردانی پیش‌فرض"], ['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);if (preg_match('/^\/(start)$/i', $text) or $text == "🔙") {
    $admin_status = "";
    if (isAdmin($from_id)) {
        $admin_status = "\n\n" . getBotText('admin_welcome');
    }
    
    $welcome_text = getBotText('welcome_message', ['first_name' => $first_name]) . $admin_status;
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => $welcome_text . "\n\n🤖 @$usernamebot\n📢 @{$Config['channel']}",
        'reply_to_message_id' => $message_id,
        'parse_mode' => "html",
        'reply_markup' => $menu_to_use
    ]);
    
    // ... بقیه کد
}// بعد از آپلود موفق
$success_message = getBotText('upload_success', [
    'file_code' => $code,
    'file_size' => convert($file_size),
    'file_type' => doc($file_type)
]);

WSBot('sendmessage', [
    'chat_id' => $chat_id,
    'text' => $success_message,
    'reply_to_message_id' => $message_id
]);// جایگزینی تمام پیام‌های خطا
else {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => getBotText('file_not_found'),
        'reply_to_message_id' => $message_id
    ]);
}// شروع آپلود گروهی
$batch_message = getBotText('batch_start', ['batch_code' => $batch_code]);

// اتمام آپلود گروهی
$complete_message = getBotText('batch_complete', [
    'file_count' => count($batch_files),
    'batch_code' => $batch_data['batch_code']
]);// اضافه کردن به منوی ادمین
elseif ($text == "📝 مدیریت متون ربات") {
    $texts_count = mysqli_fetch_assoc(mysqli_query($MySQLi, 
        "SELECT COUNT(*) as total FROM `bot_texts`"
    ));
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📝 سیستم مدیریت متون ربات\n\n📊 تعداد متون: {$texts_count['total']}\n🏷 دسته‌ها: " . implode(', ', getTextCategories()) . "\n\nاز منوی زیر برای مدیریت متون استفاده کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $text_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'text_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

// مشاهده تمام متون
elseif ($text == "📋 مشاهده تمام متون") {
    $all_texts = getAllBotTexts();
    
    if (count($all_texts) > 0) {
        $message = "📋 لیست تمام متون ربات:\n\n";
        
        foreach ($all_texts as $index => $text_item) {
            $short_value = strlen($text_item['text_value']) > 50 ? 
                substr($text_item['text_value'], 0, 50) . '...' : $text_item['text_value'];
            
            $message .= "🔑 **{$text_item['text_key']}**\n";
            $message .= "📝 {$short_value}\n";
            $message .= "🏷 {$text_item['category']}\n";
            $message .= "ℹ️ {$text_item['description']}\n";
            $message .= "⏰ {$text_item['updated_at']}\n";
            $message .= "➖➖➖➖➖➖➖\n";
        }
        
        // ارسال در چند پیام اگر طولانی باشد
        $messages = str_split($message, 4000);
        foreach ($messages as $msg_part) {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => $msg_part,
                'reply_to_message_id' => $message_id,
                'parse_mode' => 'Markdown'
            ]);
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "📭 هیچ متنی یافت نشد!",
            'reply_to_message_id' => $message_id
        ]);
    }
}

// مشاهده متون بر اساس دسته
elseif ($text == "📂 متون بر اساس دسته") {
    $categories = getTextCategories();
    $keyboard = ['inline_keyboard' => []];
    
    foreach ($categories as $category) {
        $count = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT COUNT(*) as count FROM `bot_texts` WHERE `category` = '{$category}'"
        ));
        
        $keyboard['inline_keyboard'][] = [
            [
                'text' => "{$category} ({$count['count']})",
                'callback_data' => "text_category_{$category}"
            ]
        ];
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📂 انتخاب دسته متون\n\nلطفاً دسته مورد نظر را انتخاب کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => json_encode($keyboard)
    ]);
}

// ویرایش متن
elseif ($text == "✏️ ویرایش متن") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "✏️ ویرایش متن ربات\n\nلطفاً کلید متن مورد نظر را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'edit_text_key' WHERE `id` = '{$from_id}' LIMIT 1");
}// پردازش مراحل ویرایش متن
elseif ($user['step'] == 'edit_text_key') {
    $text_key = $text;
    $text_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `bot_texts` WHERE `text_key` = '{$text_key}'"
    ));
    
    if ($text_data) {
        $current_text = str_replace("\n", '\n', $text_data['text_value']); // جایگزینی برای نمایش بهتر
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "✏️ ویرایش متن: **{$text_key}**\n\n🏷 دسته: {$text_data['category']}\nℹ️ توضیحات: {$text_data['description']}\n\n📝 متن فعلی:\n`{$current_text}`\n\n💡 راهنما:\n- از \\n برای خط جدید استفاده کنید\n- از {متغیر} برای مقادیر داینامیک استفاده کنید\n\nلطفاً متن جدید را ارسال کنید:",
            'reply_to_message_id' => $message_id,
            'parse_mode' => 'Markdown',
            'reply_markup' => $back
        ]);
        
        $MySQLi->query("UPDATE `user` SET `step` = 'edit_text_value', `code` = '{$text_key}' WHERE `id` = '{$from_id}' LIMIT 1");
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ کلید متن یافت نشد! لطفاً مجدداً尝试 کنید:",
            'reply_to_message_id' => $message_id
        ]);
    }
}

elseif ($user['step'] == 'edit_text_value') {
    $text_key = $user['code'];
    
    if (updateBotText($text_key, $text, $from_id)) {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => getBotText('text_updated') . "\n\n🔑 کلید: `{$text_key}`\n📝 متن جدید:\n" . getBotText($text_key),
            'reply_to_message_id' => $message_id,
            'parse_mode' => 'Markdown',
            'reply_markup' => $text_management
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ خطا در ویرایش متن!",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'text_management', `code` = '' WHERE `id` = '{$from_id}' LIMIT 1");
}// افزودن متن جدید
elseif ($text == "🆕 افزودن متن جدید") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🆕 افزودن متن جدید\n\nلطفاً اطلاعات را به فرمت زیر ارسال کنید:\n\nکلید|متن|توضیحات|دسته\n\n📝 مثال:\nmy_custom_text|سلام این متن جدید است|توضیحات برای متن جدید|general",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'add_new_text' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'add_new_text') {
    $parts = explode('|', $text);
    if (count($parts) >= 3) {
        $key = trim($parts[0]);
        $value = trim($parts[1]);
        $description = trim($parts[2]);
        $category = count($parts) >= 4 ? trim($parts[3]) : 'general';
        
        // بررسی وجود کلید
        $exists = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT id FROM `bot_texts` WHERE `text_key` = '{$key}'"
        ));
        
        if (!$exists) {
            $value_escaped = mysqli_real_escape_string($MySQLi, $value);
            $desc_escaped = mysqli_real_escape_string($MySQLi, $description);
            
            mysqli_query($MySQLi,
                "INSERT INTO `bot_texts` (`text_key`, `text_value`, `description`, `category`, `updated_by`) 
                 VALUES ('{$key}', '{$value_escaped}', '{$desc_escaped}', '{$category}', '{$from_id}')"
            );
            
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ متن جدید با موفقیت افزوده شد!\n\n🔑 کلید: `{$key}`\n📝 متن: {$value}\n🏷 دسته: {$category}",
                'reply_to_message_id' => $message_id,
                'parse_mode' => 'Markdown',
                'reply_markup' => $text_management
            ]);
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ این کلید از قبل وجود دارد!",
                'reply_to_message_id' => $message_id
            ]);
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ فرمت نامعتبر! لطفاً از فرمت مشخص شده استفاده کنید.",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'text_management' WHERE `id` = '{$from_id}' LIMIT 1");
}// Export متون
elseif ($text == "📤 Export متون") {
    $all_texts = getAllBotTexts();
    $export_data = json_encode($all_texts, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    
    // ذخیره در فایل موقت
    $filename = "bot_texts_export_" . date('Y-m-d_H-i-s') . ".json";
    file_put_contents($filename, $export_data);
    
    // ارسال فایل
    WSBot('senddocument', [
        'chat_id' => $chat_id,
        'document' => new CURLFile(realpath($filename)),
        'caption' => "📤 فایل Export متون ربات\n\nتعداد متون: " . count($all_texts) . "\nتاریخ: " . date('Y-m-d H:i:s'),
        'reply_to_message_id' => $message_id
    ]);
    
    // حذف فایل موقت پس از ارسال
    unlink($filename);
}

// Import متون
elseif ($text == "📥 Import متون") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📥 Import متون ربات\n\nلطفاً فایل JSON متون را ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'import_texts' WHERE `id` = '{$from_id}' LIMIT 1");
}// بازگردانی متون به حالت پیش‌فرض
elseif ($text == "🔄 بازگردانی پیش‌فرض") {
    $keyboard = json_encode(['inline_keyboard' => [
        [['text' => "✅ بله، بازگردانی کن", 'callback_data' => "reset_texts_confirm"]],
        [['text' => "❌ خیر، لغو کن", 'callback_data' => "reset_texts_cancel"]]
    ]]);
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⚠️ بازگردانی متون به حالت پیش‌فرض\n\nاین عمل تمام تغییرات شما را حذف کرده و متون را به حالت اولیه بازمی‌گرداند.\n\nآیا مطمئن هستید؟",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $keyboard
    ]);
}// پردازش callback‌های مربوط به متون
elseif (strpos($data, "text_category_") === 0) {
    $category = str_replace("text_category_", "", $data);
    $texts = getAllBotTexts($category);
    
    $message = "📂 متون دسته: **{$category}**\n\n";
    
    foreach ($texts as $text_item) {
        $short_value = strlen($text_item['text_value']) > 30 ? 
            substr($text_item['text_value'], 0, 30) . '...' : $text_item['text_value'];
        
        $message .= "🔑 `{$text_item['text_key']}`\n";
        $message .= "📝 {$short_value}\n";
        $message .= "➖➖➖➖➖\n";
    }
    
    WSBot('editmessagetext', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'text' => $message,
        'parse_mode' => 'Markdown'
    ]);
}

elseif ($data == "reset_texts_confirm") {
    // بازگردانی متون پیش‌فرض
    $default_texts = [
        ['welcome_message', '👤 سلام {first_name}\n🤖 به ربات ما خوش آمدید!', 'general'],
        // ... سایر متون پیش‌فرض
    ];
    
    $reset_count = 0;
    foreach ($default_texts as $text) {
        $value_escaped = mysqli_real_escape_string($MySQLi, $text[1]);
        mysqli_query($MySQLi,
            "UPDATE `bot_texts` 
             SET `text_value` = '{$value_escaped}', `updated_by` = '{$fromid}'
             WHERE `text_key` = '{$text[0]}'"
        );
        $reset_count++;
    }
    
    WSBot('editmessagetext', [
        'chat_id' => $chatid,
        'message_id' => $messageid,
        'text' => "✅ {$reset_count} متن به حالت پیش‌فرض بازگردانی شد!",
        'reply_markup' => json_encode(['inline_keyboard' => []])
    ]);
}// اضافه کردن مدیریت متون به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🖼 مدیریت کاور ویدیوها"], ['text' => "📝 مدیریت متون ربات"]],
        [['text' => "🛠 مدیریت فایل‌ها"], ['text' => "🔥 پرطرفدارترین‌ها"]],
        [['text' => "🔐 تنظیم پسورد"], ['text' => "🗑 حذف فایل"]],
        [['text' => "🗂 کد پیگیری فایل"], ['text' => "👤 مدیریت"]]
        ], 'resize_keyboard' => true
    ]);
}// جایگزینی تمام پیام‌های ثابت با:
getBotText('text_key', ['متغیر' => 'مقدار']);

// مثال:
getBotText('welcome_message', ['first_name' => $first_name]);
getBotText('upload_success', ['file_code' => $code, 'file_size' => $size]);// اضافه کردن به بخش ایجاد جداول
if ($MySQLi->query("SELECT * FROM `channel_verification`") == false) {
    mysqli_query($MySQLi, "CREATE TABLE `channel_verification` (
        `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `channel_username` varchar(100) NOT NULL,
        `verifier_bot_token` varchar(100) NOT NULL,
        `is_active` tinyint(1) DEFAULT 1,
        `created_at` timestamp DEFAULT CURRENT_TIMESTAMP
    )");
    
    // افزودن کانال‌های پیش‌فرض
    mysqli_query($MySQLi, "INSERT INTO `channel_verification` 
        (`channel_username`, `verifier_bot_token`) VALUES 
        ('cliiip_caption', 'TOKEN_BOT_VERIFIER_1'),
        ('LOVEMOVE11', 'TOKEN_BOT_VERIFIER_2')
    ");
}// توابع بررسی عضویت با ربات واسط
function checkMembershipWithVerifier($user_id, $channel_username, $verifier_bot_token = null) {
    if (!$verifier_bot_token) {
        // اگر توکن مشخص نشده، از جدول بخوان
        global $MySQLi;
        $channel_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
            "SELECT * FROM `channel_verification` 
             WHERE `channel_username` = '{$channel_username}' AND `is_active` = 1"
        ));
        
        if (!$channel_data) return false;
        $verifier_bot_token = $channel_data['verifier_bot_token'];
    }
    
    // استفاده از ربات واسط برای بررسی عضویت
    $url = "https://api.telegram.org/bot{$verifier_bot_token}/getChatMember";
    $data = [
        'chat_id' => '@' . ltrim($channel_username, '@'),
        'user_id' => $user_id
    ];
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $data,
        CURLOPT_TIMEOUT => 5
    ]);
    
    $response = curl_exec($ch);
    curl_close($ch);
    
    $result = json_decode($response, true);
    
    if ($result && $result['ok']) {
        $status = $result['result']['status'];
        return in_array($status, ['member', 'administrator', 'creator']);
    }
    
    return false;
}

// تابع بهبودیافته برای بررسی عضویت
function join1($user_id) {
    global $Config;
    return checkMembershipWithVerifier($user_id, $Config['channel']);
}

function join2($user_id) {
    // کانال دوم - می‌توانید از جدول بخوانید یا مستقیماً مشخص کنید
    return checkMembershipWithVerifier($user_id, 'LOVEMOVE11');
}

// تابع جدید برای بررسی عضویت در چند کانال
function checkAllChannelsMembership($user_id) {
    global $MySQLi;
    
    $channels = mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` WHERE `is_active` = 1"
    );
    
    $results = [];
    while ($channel = mysqli_fetch_assoc($channels)) {
        $is_member = checkMembershipWithVerifier($user_id, $channel['channel_username'], $channel['verifier_bot_token']);
        $results[$channel['channel_username']] = $is_member;
    }
    
    return $results;
}<?php
// verify_bot.php - ربات واسط برای بررسی عضویت
$config = [
    'token' => 'TOKEN_BOT_VERIFIER_1', // توکن ربات واسط
    'admin_id' => 414816264 // آیدی ادمین اصلی
];

// دریافت آپدیت
$input = file_get_contents('php://input');
$update = json_decode($input, true);

if (isset($update['message'])) {
    $message = $update['message'];
    $chat_id = $message['chat']['id'];
    $text = $message['text'] ?? '';
    $from_id = $message['from']['id'];
    
    // فقط پاسخ به ادمین
    if ($from_id != $config['admin_id']) {
        // برای کاربران عادی، فقط دستور /start را پردازش کن
        if ($text == '/start') {
            sendMessage($chat_id, "🤖 این ربات برای بررسی عضویت کاربران استفاده می‌شود.\n\n🔐 دسترسی فقط برای ادمین‌ها امکان‌پذیر است.", $config['token']);
        }
        exit;
    }
    
    // دستورات ادمین
    if ($text == '/start') {
        sendMessage($chat_id, "🤖 ربات واسط بررسی عضویت\n\nدستورات موجود:\n/check @channel @username - بررسی عضویت کاربر\n/listchannels - لیست کانال‌ها", $config['token']);
    }
    elseif (strpos($text, '/check') === 0) {
        $parts = explode(' ', $text);
        if (count($parts) >= 3) {
            $channel = str_replace('@', '', $parts[1]);
            $username = str_replace('@', '', $parts[2]);
            
            // پیدا کردن user_id از طریق username
            $user_id = getUserIdByUsername($username, $config['token']);
            
            if ($user_id) {
                $is_member = checkMembership($user_id, $channel, $config['token']);
                $status = $is_member ? '✅ عضو است' : '❌ عضو نیست';
                sendMessage($chat_id, "بررسی عضویت:\n\n👤 کاربر: @{$username}\n📢 کانال: @{$channel}\n🔍 وضعیت: {$status}", $config['token']);
            } else {
                sendMessage($chat_id, "❌ کاربر @{$username} یافت نشد!", $config['token']);
            }
        } else {
            sendMessage($chat_id, "❌ فرمت صحیح: /check @channel @username", $config['token']);
        }
    }
    elseif ($text == '/listchannels') {
        // لیست کانال‌هایی که ربات در آنها ادمین است
        sendMessage($chat_id, "📋 کانال‌های تحت نظارت:\n\n@cliiip_caption\n@LOVEMOVE11\n\nبرای افزودن کانال جدید، ربات را در کانال ادمین کنید و سپس از /addchannel استفاده نمایید.", $config['token']);
    }
}

// توابع کمکی
function sendMessage($chat_id, $text, $token) {
    $url = "https://api.telegram.org/bot{$token}/sendMessage";
    $data = ['chat_id' => $chat_id, 'text' => $text];
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $data,
        CURLOPT_RETURNTRANSFER => true
    ]);
    curl_exec($ch);
    curl_close($ch);
}

function checkMembership($user_id, $channel, $token) {
    $url = "https://api.telegram.org/bot{$token}/getChatMember";
    $data = [
        'chat_id' => '@' . $channel,
        'user_id' => $user_id
    ];
    
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $data,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 5
    ]);
    
    $response = curl_exec($ch);
    curl_close($ch);
    
    $result = json_decode($response, true);
    
    if ($result && $result['ok']) {
        $status = $result['result']['status'];
        return in_array($status, ['member', 'administrator', 'creator']);
    }
    
    return false;
}

function getUserIdByUsername($username, $token) {
    // این تابع نیاز به پیاده‌سازی دارد
    // می‌توانید از دیتابیس خود یا روش‌های دیگر استفاده کنید
    return null; // پیاده‌سازی شود
}
?>// جایگزینی توابع join قدیمی با توابع جدید
function join1($user_id) {
    global $Config, $MySQLi;
    
    // بررسی از طریق ربات واسط
    $channel_data = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` 
         WHERE `channel_username` = '{$Config['channel']}' AND `is_active` = 1"
    ));
    
    if ($channel_data) {
        return checkMembershipWithVerifier($user_id, $Config['channel'], $channel_data['verifier_bot_token']);
    }
    
    // روش قدیمی (فعلاً نگه دارید برای compatibilit)
    $truechannel = json_decode(file_get_contents("https://api.telegram.org/bot{$Config['api_token']}/getChatMember?chat_id=@{$Config['channel']}&user_id=".$user_id));
    $tch = $truechannel->result->status;
    return ($tch == 'creator' || $tch == 'administrator' || $tch == 'member');
}

function join2($user_id) {
    return checkMembershipWithVerifier($user_id, 'LOVEMOVE11');
}

// تابع جدید برای بررسی همه کانال‌ها
function checkUserMembership($user_id) {
    $results = checkAllChannelsMembership($user_id);
    $all_joined = true;
    
    foreach ($results as $channel => $is_member) {
        if (!$is_member) {
            $all_joined = false;
            break;
        }
    }
    
    return $all_joined;
}// تغییر در شرط جوین اجباری
if(!checkUserMembership($from_id)){
    $channels_list = "";
    $channel_results = checkAllChannelsMembership($from_id);
    
    foreach ($channel_results as $channel => $is_member) {
        $status_emoji = $is_member ? "✅" : "❌";
        $channels_list .= "{$status_emoji} @{$channel}\n";
    }
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "⚠️ برای استفاده از ربات باید در کانال‌های زیر عضو باشید:\n\n{$channels_list}\n\nپس از عضویت، روی دکمه «✅ عضو شدم» کلیک کنید.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $join
    ]);
    exit();
}// منوی مدیریت کانال‌های جوین اجباری
$channel_management = json_encode(['keyboard' => [
    [['text' => "📢 افزودن کانال جدید"], ['text' => "🗑 حذف کانال"]],
    [['text' => "📋 لیست کانال‌ها"], ['text' => "🔧 تنظیمات ربات واسط"]],
    [['text' => "🔄 تست بررسی عضویت"], ['text' => "⚙️ فعال/غیرفعال کردن"]],
    [['text' => "🔙 برگشت"]]
    ], 'resize_keyboard' => true
]);// اضافه کردن به منوی ادمین
elseif ($text == "📢 مدیریت جوین اجباری") {
    $channels_count = mysqli_fetch_assoc(mysqli_query($MySQLi,
        "SELECT COUNT(*) as total FROM `channel_verification` WHERE `is_active` = 1"
    ));
    
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📢 سیستم مدیریت جوین اجباری\n\n🏷 کانال‌های فعال: {$channels_count['total']}\n🤖 روش: استفاده از ربات واسط\n\nبا این سیستم، ربات آپلودر نیازی به ادمین شدن در کانال‌ها ندارد.",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $channel_management
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'channel_management' WHERE `id` = '{$from_id}' LIMIT 1");
}

// افزودن کانال جدید
elseif ($text == "📢 افزودن کانال جدید") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "📢 افزودن کانال جدید\n\nلطفاً اطلاعات را به فرمت زیر ارسال کنید:\n\nکانال|توکن ربات واسط\n\n📝 مثال:\nmy_channel|123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'add_new_channel' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'add_new_channel') {
    $parts = explode('|', $text);
    if (count($parts) == 2) {
        $channel = trim($parts[0]);
        $token = trim($parts[1]);
        
        // حذف @ از اول نام کانال
        $channel = ltrim($channel, '@');
        
        // تست توکن ربات واسط
        $test_url = "https://api.telegram.org/bot{$token}/getMe";
        $test_result = json_decode(file_get_contents($test_url), true);
        
        if ($test_result && $test_result['ok']) {
            mysqli_query($MySQLi,
                "INSERT INTO `channel_verification` (`channel_username`, `verifier_bot_token`) 
                 VALUES ('{$channel}', '{$token}')"
            );
            
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "✅ کانال @{$channel} با موفقیت افزوده شد!\n\nربات واسط: @{$test_result['result']['username']}",
                'reply_to_message_id' => $message_id,
                'reply_markup' => $channel_management
            ]);
        } else {
            WSBot('sendmessage', [
                'chat_id' => $chat_id,
                'text' => "❌ توکن ربات واسط نامعتبر است!",
                'reply_to_message_id' => $message_id
            ]);
        }
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ فرمت نامعتبر! لطفاً از فرمت مشخص شده استفاده کنید.",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'channel_management' WHERE `id` = '{$from_id}' LIMIT 1");
}// تست بررسی عضویت
elseif ($text == "🔄 تست بررسی عضویت") {
    WSBot('sendmessage', [
        'chat_id' => $chat_id,
        'text' => "🔄 تست بررسی عضویت\n\nلطفاً آیدی کاربر را برای تست ارسال کنید:",
        'reply_to_message_id' => $message_id,
        'reply_markup' => $back
    ]);
    $MySQLi->query("UPDATE `user` SET `step` = 'test_membership_user' WHERE `id` = '{$from_id}' LIMIT 1");
}

elseif ($user['step'] == 'test_membership_user') {
    $test_user_id = $text;
    
    if (is_numeric($test_user_id)) {
        $results = checkAllChannelsMembership($test_user_id);
        
        $message = "🔍 نتایج تست عضویت برای کاربر {$test_user_id}:\n\n";
        
        foreach ($results as $channel => $is_member) {
            $status = $is_member ? "✅ عضو است" : "❌ عضو نیست";
            $message .= "@{$channel}: {$status}\n";
        }
        
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => $message,
            'reply_to_message_id' => $message_id,
            'reply_markup' => $channel_management
        ]);
    } else {
        WSBot('sendmessage', [
            'chat_id' => $chat_id,
            'text' => "❌ آیدی کاربر باید عددی باشد!",
            'reply_to_message_id' => $message_id
        ]);
    }
    
    $MySQLi->query("UPDATE `user` SET `step` = 'channel_management' WHERE `id` = '{$from_id}' LIMIT 1");
}// تابع ایجاد کیبورد جوین اجباری پویا
function getDynamicJoinKeyboard() {
    global $MySQLi;
    
    $channels = mysqli_query($MySQLi,
        "SELECT * FROM `channel_verification` WHERE `is_active` = 1"
    );
    
    $keyboard = ['inline_keyboard' => []];
    
    while ($channel = mysqli_fetch_assoc($channels)) {
        $keyboard['inline_keyboard'][] = [
            [
                'text' => "📢 عضویت در @{$channel['channel_username']}",
                'url' => "https://t.me/" . $channel['channel_username']
            ]
        ];
    }
    
    $keyboard['inline_keyboard'][] = [
        [
            'text' => "✅ عضو شدم",
            'callback_data' => "join"
        ]
    ];
    
    return json_encode($keyboard);
}

// استفاده از کیبورد پویا در پیام جوین اجباری
$join = getDynamicJoinKeyboard();// اضافه کردن مدیریت جوین اجباری به منوی ادمین
if (isAdmin($from_id)) {
    $menu = json_encode(['keyboard' => [
        [['text' => "📂 تاریخچه اپلود"], ['text' =>"🎫 حساب کاربری"]],
        [['text' => "📦 آپلود گروهی پیشرفته"], ['text' => "📺 مدیریت سریال‌ها"]],
        [['text' => "🖼 مدیریت کاور ویدیوها"], ['text' => "📝 مدیریت متون ربات"]],
        [['text' => "📢 مدیریت جوین اجباری"], ['text' => "🛠 مدیریت فایل‌ها"]],
        [['text' => "🔥 پرطرفدارترین‌ها"], ['text' => "🔐 تنظیم پسورد"]],
        [['text' => "🗑 حذف فایل"], ['text' => "🗂 کد پیگیری فایل"]],
        [['text' => "👤 مدیریت"]]
        ], 'resize_keyboard' => true
    ]);
}